/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.artifactory;


import com.tencent.devops.model.artifactory.tables.TFileInfo;
import com.tencent.devops.model.artifactory.tables.TFilePropsInfo;
import com.tencent.devops.model.artifactory.tables.TTipelineArtifacetoryInfo;
import com.tencent.devops.model.artifactory.tables.TToken;
import com.tencent.devops.model.artifactory.tables.records.TFileInfoRecord;
import com.tencent.devops.model.artifactory.tables.records.TFilePropsInfoRecord;
import com.tencent.devops.model.artifactory.tables.records.TTipelineArtifacetoryInfoRecord;
import com.tencent.devops.model.artifactory.tables.records.TTokenRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>devops_artifactory</code> 
 * schema
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TTipelineArtifacetoryInfoRecord, Long> IDENTITY_T_TIPELINE_ARTIFACETORY_INFO = Identities0.IDENTITY_T_TIPELINE_ARTIFACETORY_INFO;
    public static final Identity<TTokenRecord, Long> IDENTITY_T_TOKEN = Identities0.IDENTITY_T_TOKEN;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TFileInfoRecord> KEY_T_FILE_INFO_PRIMARY = UniqueKeys0.KEY_T_FILE_INFO_PRIMARY;
    public static final UniqueKey<TFilePropsInfoRecord> KEY_T_FILE_PROPS_INFO_PRIMARY = UniqueKeys0.KEY_T_FILE_PROPS_INFO_PRIMARY;
    public static final UniqueKey<TTipelineArtifacetoryInfoRecord> KEY_T_TIPELINE_ARTIFACETORY_INFO_PRIMARY = UniqueKeys0.KEY_T_TIPELINE_ARTIFACETORY_INFO_PRIMARY;
    public static final UniqueKey<TTokenRecord> KEY_T_TOKEN_PRIMARY = UniqueKeys0.KEY_T_TOKEN_PRIMARY;
    public static final UniqueKey<TTokenRecord> KEY_T_TOKEN_TOKEN = UniqueKeys0.KEY_T_TOKEN_TOKEN;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<TTipelineArtifacetoryInfoRecord, Long> IDENTITY_T_TIPELINE_ARTIFACETORY_INFO = createIdentity(TTipelineArtifacetoryInfo.T_TIPELINE_ARTIFACETORY_INFO, TTipelineArtifacetoryInfo.T_TIPELINE_ARTIFACETORY_INFO.ID);
        public static Identity<TTokenRecord, Long> IDENTITY_T_TOKEN = createIdentity(TToken.T_TOKEN, TToken.T_TOKEN.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<TFileInfoRecord> KEY_T_FILE_INFO_PRIMARY = createUniqueKey(TFileInfo.T_FILE_INFO, "KEY_T_FILE_INFO_PRIMARY", TFileInfo.T_FILE_INFO.ID);
        public static final UniqueKey<TFilePropsInfoRecord> KEY_T_FILE_PROPS_INFO_PRIMARY = createUniqueKey(TFilePropsInfo.T_FILE_PROPS_INFO, "KEY_T_FILE_PROPS_INFO_PRIMARY", TFilePropsInfo.T_FILE_PROPS_INFO.ID);
        public static final UniqueKey<TTipelineArtifacetoryInfoRecord> KEY_T_TIPELINE_ARTIFACETORY_INFO_PRIMARY = createUniqueKey(TTipelineArtifacetoryInfo.T_TIPELINE_ARTIFACETORY_INFO, "KEY_T_TIPELINE_ARTIFACETORY_INFO_PRIMARY", TTipelineArtifacetoryInfo.T_TIPELINE_ARTIFACETORY_INFO.ID);
        public static final UniqueKey<TTokenRecord> KEY_T_TOKEN_PRIMARY = createUniqueKey(TToken.T_TOKEN, "KEY_T_TOKEN_PRIMARY", TToken.T_TOKEN.ID);
        public static final UniqueKey<TTokenRecord> KEY_T_TOKEN_TOKEN = createUniqueKey(TToken.T_TOKEN, "KEY_T_TOKEN_TOKEN", TToken.T_TOKEN.TOKEN);
    }
}
