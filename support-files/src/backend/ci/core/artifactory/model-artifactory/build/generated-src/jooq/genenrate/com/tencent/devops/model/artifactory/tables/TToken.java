/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.artifactory.tables;


import com.tencent.devops.model.artifactory.DevopsArtifactory;
import com.tencent.devops.model.artifactory.Keys;
import com.tencent.devops.model.artifactory.tables.records.TTokenRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TToken extends TableImpl<TTokenRecord> {

    private static final long serialVersionUID = -288325601;

    /**
     * The reference instance of <code>devops_artifactory.T_TOKEN</code>
     */
    public static final TToken T_TOKEN = new TToken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TTokenRecord> getRecordType() {
        return TTokenRecord.class;
    }

    /**
     * The column <code>devops_artifactory.T_TOKEN.ID</code>.
     */
    public final TableField<TTokenRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_artifactory.T_TOKEN.USER_ID</code>.
     */
    public final TableField<TTokenRecord, String> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_artifactory.T_TOKEN.PROJECT_ID</code>.
     */
    public final TableField<TTokenRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_artifactory.T_TOKEN.ARTIFACTORY_TYPE</code>.
     */
    public final TableField<TTokenRecord, String> ARTIFACTORY_TYPE = createField("ARTIFACTORY_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_artifactory.T_TOKEN.PATH</code>.
     */
    public final TableField<TTokenRecord, String> PATH = createField("PATH", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>devops_artifactory.T_TOKEN.TOKEN</code>.
     */
    public final TableField<TTokenRecord, String> TOKEN = createField("TOKEN", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_artifactory.T_TOKEN.EXPIRE_TIME</code>.
     */
    public final TableField<TTokenRecord, LocalDateTime> EXPIRE_TIME = createField("EXPIRE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_artifactory.T_TOKEN.CREATE_TIME</code>.
     */
    public final TableField<TTokenRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_artifactory.T_TOKEN.UPDATE_TIME</code>.
     */
    public final TableField<TTokenRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>devops_artifactory.T_TOKEN</code> table reference
     */
    public TToken() {
        this("T_TOKEN", null);
    }

    /**
     * Create an aliased <code>devops_artifactory.T_TOKEN</code> table reference
     */
    public TToken(String alias) {
        this(alias, T_TOKEN);
    }

    private TToken(String alias, Table<TTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private TToken(String alias, Table<TTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsArtifactory.DEVOPS_ARTIFACTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TTokenRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TTokenRecord> getPrimaryKey() {
        return Keys.KEY_T_TOKEN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TTokenRecord>> getKeys() {
        return Arrays.<UniqueKey<TTokenRecord>>asList(Keys.KEY_T_TOKEN_PRIMARY, Keys.KEY_T_TOKEN_TOKEN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TToken as(String alias) {
        return new TToken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TToken rename(String name) {
        return new TToken(name, null);
    }
}
