/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.dispatch;


import com.tencent.devops.model.dispatch.tables.TDispatchDevcloudBuild;
import com.tencent.devops.model.dispatch.tables.TDispatchDevcloudContainerConfig;
import com.tencent.devops.model.dispatch.tables.TDispatchMachine;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineBuild;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerBuild;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerDebug;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerEnable;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerHost;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerHostZone;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerTask;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerTemplate;
import com.tencent.devops.model.dispatch.tables.TDispatchPipelineVm;
import com.tencent.devops.model.dispatch.tables.TDispatchPrivateVm;
import com.tencent.devops.model.dispatch.tables.TDispatchProjectSnapshot;
import com.tencent.devops.model.dispatch.tables.TDispatchTask;
import com.tencent.devops.model.dispatch.tables.TDispatchTaskDetail;
import com.tencent.devops.model.dispatch.tables.TDispatchTaskVm;
import com.tencent.devops.model.dispatch.tables.TDispatchThirdpartyAgentBuild;
import com.tencent.devops.model.dispatch.tables.TDispatchThirdpartyBuild;
import com.tencent.devops.model.dispatch.tables.TDispatchTstackBuild;
import com.tencent.devops.model.dispatch.tables.TDispatchTstackConfig;
import com.tencent.devops.model.dispatch.tables.TDispatchTstackFloatingIp;
import com.tencent.devops.model.dispatch.tables.TDispatchTstackSystem;
import com.tencent.devops.model.dispatch.tables.TDispatchTstackVm;
import com.tencent.devops.model.dispatch.tables.TDispatchTstackVolume;
import com.tencent.devops.model.dispatch.tables.TDispatchVm;
import com.tencent.devops.model.dispatch.tables.TDispatchVmType;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DevopsDispatch extends SchemaImpl {

    private static final long serialVersionUID = -861039543;

    /**
     * The reference instance of <code>devops_dispatch</code>
     */
    public static final DevopsDispatch DEVOPS_DISPATCH = new DevopsDispatch();

    /**
     * The table <code>devops_dispatch.T_DISPATCH_DEVCLOUD_BUILD</code>.
     */
    public final TDispatchDevcloudBuild T_DISPATCH_DEVCLOUD_BUILD = com.tencent.devops.model.dispatch.tables.TDispatchDevcloudBuild.T_DISPATCH_DEVCLOUD_BUILD;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG</code>.
     */
    public final TDispatchDevcloudContainerConfig T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG = com.tencent.devops.model.dispatch.tables.TDispatchDevcloudContainerConfig.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_MACHINE</code>.
     */
    public final TDispatchMachine T_DISPATCH_MACHINE = com.tencent.devops.model.dispatch.tables.TDispatchMachine.T_DISPATCH_MACHINE;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_BUILD</code>.
     */
    public final TDispatchPipelineBuild T_DISPATCH_PIPELINE_BUILD = com.tencent.devops.model.dispatch.tables.TDispatchPipelineBuild.T_DISPATCH_PIPELINE_BUILD;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_BUILD</code>.
     */
    public final TDispatchPipelineDockerBuild T_DISPATCH_PIPELINE_DOCKER_BUILD = com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerBuild.T_DISPATCH_PIPELINE_DOCKER_BUILD;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_DEBUG</code>.
     */
    public final TDispatchPipelineDockerDebug T_DISPATCH_PIPELINE_DOCKER_DEBUG = com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerDebug.T_DISPATCH_PIPELINE_DOCKER_DEBUG;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_ENABLE</code>.
     */
    public final TDispatchPipelineDockerEnable T_DISPATCH_PIPELINE_DOCKER_ENABLE = com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerEnable.T_DISPATCH_PIPELINE_DOCKER_ENABLE;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST</code>.
     */
    public final TDispatchPipelineDockerHost T_DISPATCH_PIPELINE_DOCKER_HOST = com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerHost.T_DISPATCH_PIPELINE_DOCKER_HOST;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE</code>.
     */
    public final TDispatchPipelineDockerHostZone T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE = com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerHostZone.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_TASK</code>.
     */
    public final TDispatchPipelineDockerTask T_DISPATCH_PIPELINE_DOCKER_TASK = com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerTask.T_DISPATCH_PIPELINE_DOCKER_TASK;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_TEMPLATE</code>.
     */
    public final TDispatchPipelineDockerTemplate T_DISPATCH_PIPELINE_DOCKER_TEMPLATE = com.tencent.devops.model.dispatch.tables.TDispatchPipelineDockerTemplate.T_DISPATCH_PIPELINE_DOCKER_TEMPLATE;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PIPELINE_VM</code>.
     */
    public final TDispatchPipelineVm T_DISPATCH_PIPELINE_VM = com.tencent.devops.model.dispatch.tables.TDispatchPipelineVm.T_DISPATCH_PIPELINE_VM;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PRIVATE_VM</code>.
     */
    public final TDispatchPrivateVm T_DISPATCH_PRIVATE_VM = com.tencent.devops.model.dispatch.tables.TDispatchPrivateVm.T_DISPATCH_PRIVATE_VM;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_PROJECT_SNAPSHOT</code>.
     */
    public final TDispatchProjectSnapshot T_DISPATCH_PROJECT_SNAPSHOT = com.tencent.devops.model.dispatch.tables.TDispatchProjectSnapshot.T_DISPATCH_PROJECT_SNAPSHOT;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TASK</code>.
     */
    public final TDispatchTask T_DISPATCH_TASK = com.tencent.devops.model.dispatch.tables.TDispatchTask.T_DISPATCH_TASK;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TASK_DETAIL</code>.
     */
    public final TDispatchTaskDetail T_DISPATCH_TASK_DETAIL = com.tencent.devops.model.dispatch.tables.TDispatchTaskDetail.T_DISPATCH_TASK_DETAIL;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TASK_VM</code>.
     */
    public final TDispatchTaskVm T_DISPATCH_TASK_VM = com.tencent.devops.model.dispatch.tables.TDispatchTaskVm.T_DISPATCH_TASK_VM;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_THIRDPARTY_AGENT_BUILD</code>.
     */
    public final TDispatchThirdpartyAgentBuild T_DISPATCH_THIRDPARTY_AGENT_BUILD = com.tencent.devops.model.dispatch.tables.TDispatchThirdpartyAgentBuild.T_DISPATCH_THIRDPARTY_AGENT_BUILD;

    /**
     * 第三方系统构建(企业IT，PCG等)
     */
    public final TDispatchThirdpartyBuild T_DISPATCH_THIRDPARTY_BUILD = com.tencent.devops.model.dispatch.tables.TDispatchThirdpartyBuild.T_DISPATCH_THIRDPARTY_BUILD;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TSTACK_BUILD</code>.
     */
    public final TDispatchTstackBuild T_DISPATCH_TSTACK_BUILD = com.tencent.devops.model.dispatch.tables.TDispatchTstackBuild.T_DISPATCH_TSTACK_BUILD;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TSTACK_CONFIG</code>.
     */
    public final TDispatchTstackConfig T_DISPATCH_TSTACK_CONFIG = com.tencent.devops.model.dispatch.tables.TDispatchTstackConfig.T_DISPATCH_TSTACK_CONFIG;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TSTACK_FLOATING_IP</code>.
     */
    public final TDispatchTstackFloatingIp T_DISPATCH_TSTACK_FLOATING_IP = com.tencent.devops.model.dispatch.tables.TDispatchTstackFloatingIp.T_DISPATCH_TSTACK_FLOATING_IP;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TSTACK_SYSTEM</code>.
     */
    public final TDispatchTstackSystem T_DISPATCH_TSTACK_SYSTEM = com.tencent.devops.model.dispatch.tables.TDispatchTstackSystem.T_DISPATCH_TSTACK_SYSTEM;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TSTACK_VM</code>.
     */
    public final TDispatchTstackVm T_DISPATCH_TSTACK_VM = com.tencent.devops.model.dispatch.tables.TDispatchTstackVm.T_DISPATCH_TSTACK_VM;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_TSTACK_VOLUME</code>.
     */
    public final TDispatchTstackVolume T_DISPATCH_TSTACK_VOLUME = com.tencent.devops.model.dispatch.tables.TDispatchTstackVolume.T_DISPATCH_TSTACK_VOLUME;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_VM</code>.
     */
    public final TDispatchVm T_DISPATCH_VM = com.tencent.devops.model.dispatch.tables.TDispatchVm.T_DISPATCH_VM;

    /**
     * The table <code>devops_dispatch.T_DISPATCH_VM_TYPE</code>.
     */
    public final TDispatchVmType T_DISPATCH_VM_TYPE = com.tencent.devops.model.dispatch.tables.TDispatchVmType.T_DISPATCH_VM_TYPE;

    /**
     * No further instances allowed
     */
    private DevopsDispatch() {
        super("devops_dispatch", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            TDispatchDevcloudBuild.T_DISPATCH_DEVCLOUD_BUILD,
            TDispatchDevcloudContainerConfig.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG,
            TDispatchMachine.T_DISPATCH_MACHINE,
            TDispatchPipelineBuild.T_DISPATCH_PIPELINE_BUILD,
            TDispatchPipelineDockerBuild.T_DISPATCH_PIPELINE_DOCKER_BUILD,
            TDispatchPipelineDockerDebug.T_DISPATCH_PIPELINE_DOCKER_DEBUG,
            TDispatchPipelineDockerEnable.T_DISPATCH_PIPELINE_DOCKER_ENABLE,
            TDispatchPipelineDockerHost.T_DISPATCH_PIPELINE_DOCKER_HOST,
            TDispatchPipelineDockerHostZone.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE,
            TDispatchPipelineDockerTask.T_DISPATCH_PIPELINE_DOCKER_TASK,
            TDispatchPipelineDockerTemplate.T_DISPATCH_PIPELINE_DOCKER_TEMPLATE,
            TDispatchPipelineVm.T_DISPATCH_PIPELINE_VM,
            TDispatchPrivateVm.T_DISPATCH_PRIVATE_VM,
            TDispatchProjectSnapshot.T_DISPATCH_PROJECT_SNAPSHOT,
            TDispatchTask.T_DISPATCH_TASK,
            TDispatchTaskDetail.T_DISPATCH_TASK_DETAIL,
            TDispatchTaskVm.T_DISPATCH_TASK_VM,
            TDispatchThirdpartyAgentBuild.T_DISPATCH_THIRDPARTY_AGENT_BUILD,
            TDispatchThirdpartyBuild.T_DISPATCH_THIRDPARTY_BUILD,
            TDispatchTstackBuild.T_DISPATCH_TSTACK_BUILD,
            TDispatchTstackConfig.T_DISPATCH_TSTACK_CONFIG,
            TDispatchTstackFloatingIp.T_DISPATCH_TSTACK_FLOATING_IP,
            TDispatchTstackSystem.T_DISPATCH_TSTACK_SYSTEM,
            TDispatchTstackVm.T_DISPATCH_TSTACK_VM,
            TDispatchTstackVolume.T_DISPATCH_TSTACK_VOLUME,
            TDispatchVm.T_DISPATCH_VM,
            TDispatchVmType.T_DISPATCH_VM_TYPE);
    }
}
