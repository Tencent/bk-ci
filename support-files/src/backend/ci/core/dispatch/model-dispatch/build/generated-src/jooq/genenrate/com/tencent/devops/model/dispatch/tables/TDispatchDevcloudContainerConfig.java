/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.dispatch.tables;


import com.tencent.devops.model.dispatch.DevopsDispatch;
import com.tencent.devops.model.dispatch.Keys;
import com.tencent.devops.model.dispatch.tables.records.TDispatchDevcloudContainerConfigRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDispatchDevcloudContainerConfig extends TableImpl<TDispatchDevcloudContainerConfigRecord> {

    private static final long serialVersionUID = -2049811503;

    /**
     * The reference instance of <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG</code>
     */
    public static final TDispatchDevcloudContainerConfig T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG = new TDispatchDevcloudContainerConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDispatchDevcloudContainerConfigRecord> getRecordType() {
        return TDispatchDevcloudContainerConfigRecord.class;
    }

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.ID</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.PROJECT_ID</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.PIPELINE_ID</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.VM_SEQ_ID</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> VM_SEQ_ID = createField("VM_SEQ_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.REGISTRY_HOST</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> REGISTRY_HOST = createField("REGISTRY_HOST", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.REGISTRY_USERNAME</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> REGISTRY_USERNAME = createField("REGISTRY_USERNAME", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.REGISTRY_PASSWORD</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> REGISTRY_PASSWORD = createField("REGISTRY_PASSWORD", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.CPU</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, Integer> CPU = createField("CPU", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("4", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.MEMORY</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> MEMORY = createField("MEMORY", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("4096M", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.DISK</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> DISK = createField("DISK", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("100G", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.REPLICA</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, Integer> REPLICA = createField("REPLICA", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.PORTS</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> PORTS = createField("PORTS", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG.PASSWORD</code>.
     */
    public final TableField<TDispatchDevcloudContainerConfigRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * Create a <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG</code> table reference
     */
    public TDispatchDevcloudContainerConfig() {
        this("T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG", null);
    }

    /**
     * Create an aliased <code>devops_dispatch.T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG</code> table reference
     */
    public TDispatchDevcloudContainerConfig(String alias) {
        this(alias, T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG);
    }

    private TDispatchDevcloudContainerConfig(String alias, Table<TDispatchDevcloudContainerConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDispatchDevcloudContainerConfig(String alias, Table<TDispatchDevcloudContainerConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsDispatch.DEVOPS_DISPATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TDispatchDevcloudContainerConfigRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDispatchDevcloudContainerConfigRecord> getPrimaryKey() {
        return Keys.KEY_T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDispatchDevcloudContainerConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<TDispatchDevcloudContainerConfigRecord>>asList(Keys.KEY_T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG_PRIMARY, Keys.KEY_T_DISPATCH_DEVCLOUD_CONTAINER_CONFIG_PROJECT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDispatchDevcloudContainerConfig as(String alias) {
        return new TDispatchDevcloudContainerConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDispatchDevcloudContainerConfig rename(String name) {
        return new TDispatchDevcloudContainerConfig(name, null);
    }
}
