/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.dispatch.tables;


import com.tencent.devops.model.dispatch.DevopsDispatch;
import com.tencent.devops.model.dispatch.Keys;
import com.tencent.devops.model.dispatch.tables.records.TDispatchPipelineDockerEnableRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDispatchPipelineDockerEnable extends TableImpl<TDispatchPipelineDockerEnableRecord> {

    private static final long serialVersionUID = -1668315496;

    /**
     * The reference instance of <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_ENABLE</code>
     */
    public static final TDispatchPipelineDockerEnable T_DISPATCH_PIPELINE_DOCKER_ENABLE = new TDispatchPipelineDockerEnable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDispatchPipelineDockerEnableRecord> getRecordType() {
        return TDispatchPipelineDockerEnableRecord.class;
    }

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_ENABLE.PIPELINE_ID</code>.
     */
    public final TableField<TDispatchPipelineDockerEnableRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_ENABLE.ENABLE</code>.
     */
    public final TableField<TDispatchPipelineDockerEnableRecord, Byte> ENABLE = createField("ENABLE", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_ENABLE.VM_SEQ_ID</code>.
     */
    public final TableField<TDispatchPipelineDockerEnableRecord, Integer> VM_SEQ_ID = createField("VM_SEQ_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_ENABLE</code> table reference
     */
    public TDispatchPipelineDockerEnable() {
        this("T_DISPATCH_PIPELINE_DOCKER_ENABLE", null);
    }

    /**
     * Create an aliased <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_ENABLE</code> table reference
     */
    public TDispatchPipelineDockerEnable(String alias) {
        this(alias, T_DISPATCH_PIPELINE_DOCKER_ENABLE);
    }

    private TDispatchPipelineDockerEnable(String alias, Table<TDispatchPipelineDockerEnableRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDispatchPipelineDockerEnable(String alias, Table<TDispatchPipelineDockerEnableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsDispatch.DEVOPS_DISPATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDispatchPipelineDockerEnableRecord> getPrimaryKey() {
        return Keys.KEY_T_DISPATCH_PIPELINE_DOCKER_ENABLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDispatchPipelineDockerEnableRecord>> getKeys() {
        return Arrays.<UniqueKey<TDispatchPipelineDockerEnableRecord>>asList(Keys.KEY_T_DISPATCH_PIPELINE_DOCKER_ENABLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDispatchPipelineDockerEnable as(String alias) {
        return new TDispatchPipelineDockerEnable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDispatchPipelineDockerEnable rename(String name) {
        return new TDispatchPipelineDockerEnable(name, null);
    }
}
