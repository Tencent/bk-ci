/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.dispatch.tables;


import com.tencent.devops.model.dispatch.DevopsDispatch;
import com.tencent.devops.model.dispatch.Keys;
import com.tencent.devops.model.dispatch.tables.records.TDispatchPipelineDockerHostZoneRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDispatchPipelineDockerHostZone extends TableImpl<TDispatchPipelineDockerHostZoneRecord> {

    private static final long serialVersionUID = 406803600;

    /**
     * The reference instance of <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE</code>
     */
    public static final TDispatchPipelineDockerHostZone T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE = new TDispatchPipelineDockerHostZone();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDispatchPipelineDockerHostZoneRecord> getRecordType() {
        return TDispatchPipelineDockerHostZoneRecord.class;
    }

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE.HOST_IP</code>.
     */
    public final TableField<TDispatchPipelineDockerHostZoneRecord, String> HOST_IP = createField("HOST_IP", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE.ZONE</code>.
     */
    public final TableField<TDispatchPipelineDockerHostZoneRecord, String> ZONE = createField("ZONE", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE.ENABLE</code>.
     */
    public final TableField<TDispatchPipelineDockerHostZoneRecord, Byte> ENABLE = createField("ENABLE", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE.REMARK</code>.
     */
    public final TableField<TDispatchPipelineDockerHostZoneRecord, String> REMARK = createField("REMARK", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE.CREATED_TIME</code>.
     */
    public final TableField<TDispatchPipelineDockerHostZoneRecord, LocalDateTime> CREATED_TIME = createField("CREATED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE.UPDATED_TIME</code>.
     */
    public final TableField<TDispatchPipelineDockerHostZoneRecord, LocalDateTime> UPDATED_TIME = createField("UPDATED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE.TYPE</code>. 母机类型, 0表示是构建环境的构建机, 1表示是无编译环境的机器
     */
    public final TableField<TDispatchPipelineDockerHostZoneRecord, Integer> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "母机类型, 0表示是构建环境的构建机, 1表示是无编译环境的机器");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE.ROUTE_KEY</code>. 消息队列的路由KEY
     */
    public final TableField<TDispatchPipelineDockerHostZoneRecord, String> ROUTE_KEY = createField("ROUTE_KEY", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "消息队列的路由KEY");

    /**
     * Create a <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE</code> table reference
     */
    public TDispatchPipelineDockerHostZone() {
        this("T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE", null);
    }

    /**
     * Create an aliased <code>devops_dispatch.T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE</code> table reference
     */
    public TDispatchPipelineDockerHostZone(String alias) {
        this(alias, T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE);
    }

    private TDispatchPipelineDockerHostZone(String alias, Table<TDispatchPipelineDockerHostZoneRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDispatchPipelineDockerHostZone(String alias, Table<TDispatchPipelineDockerHostZoneRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsDispatch.DEVOPS_DISPATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDispatchPipelineDockerHostZoneRecord> getPrimaryKey() {
        return Keys.KEY_T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDispatchPipelineDockerHostZoneRecord>> getKeys() {
        return Arrays.<UniqueKey<TDispatchPipelineDockerHostZoneRecord>>asList(Keys.KEY_T_DISPATCH_PIPELINE_DOCKER_HOST_ZONE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDispatchPipelineDockerHostZone as(String alias) {
        return new TDispatchPipelineDockerHostZone(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDispatchPipelineDockerHostZone rename(String name) {
        return new TDispatchPipelineDockerHostZone(name, null);
    }
}
