/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.dispatch.tables;


import com.tencent.devops.model.dispatch.DevopsDispatch;
import com.tencent.devops.model.dispatch.Keys;
import com.tencent.devops.model.dispatch.tables.records.TDispatchPrivateVmRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDispatchPrivateVm extends TableImpl<TDispatchPrivateVmRecord> {

    private static final long serialVersionUID = -79528356;

    /**
     * The reference instance of <code>devops_dispatch.T_DISPATCH_PRIVATE_VM</code>
     */
    public static final TDispatchPrivateVm T_DISPATCH_PRIVATE_VM = new TDispatchPrivateVm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDispatchPrivateVmRecord> getRecordType() {
        return TDispatchPrivateVmRecord.class;
    }

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PRIVATE_VM.VM_ID</code>.
     */
    public final TableField<TDispatchPrivateVmRecord, Integer> VM_ID = createField("VM_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_PRIVATE_VM.PROJECT_ID</code>.
     */
    public final TableField<TDispatchPrivateVmRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * Create a <code>devops_dispatch.T_DISPATCH_PRIVATE_VM</code> table reference
     */
    public TDispatchPrivateVm() {
        this("T_DISPATCH_PRIVATE_VM", null);
    }

    /**
     * Create an aliased <code>devops_dispatch.T_DISPATCH_PRIVATE_VM</code> table reference
     */
    public TDispatchPrivateVm(String alias) {
        this(alias, T_DISPATCH_PRIVATE_VM);
    }

    private TDispatchPrivateVm(String alias, Table<TDispatchPrivateVmRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDispatchPrivateVm(String alias, Table<TDispatchPrivateVmRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsDispatch.DEVOPS_DISPATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDispatchPrivateVmRecord> getPrimaryKey() {
        return Keys.KEY_T_DISPATCH_PRIVATE_VM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDispatchPrivateVmRecord>> getKeys() {
        return Arrays.<UniqueKey<TDispatchPrivateVmRecord>>asList(Keys.KEY_T_DISPATCH_PRIVATE_VM_PRIMARY, Keys.KEY_T_DISPATCH_PRIVATE_VM_VM_PROJECT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDispatchPrivateVm as(String alias) {
        return new TDispatchPrivateVm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDispatchPrivateVm rename(String name) {
        return new TDispatchPrivateVm(name, null);
    }
}
