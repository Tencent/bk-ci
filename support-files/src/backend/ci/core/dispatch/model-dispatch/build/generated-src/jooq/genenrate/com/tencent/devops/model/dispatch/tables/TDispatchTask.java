/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.dispatch.tables;


import com.tencent.devops.model.dispatch.DevopsDispatch;
import com.tencent.devops.model.dispatch.Keys;
import com.tencent.devops.model.dispatch.tables.records.TDispatchTaskRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDispatchTask extends TableImpl<TDispatchTaskRecord> {

    private static final long serialVersionUID = 1472778271;

    /**
     * The reference instance of <code>devops_dispatch.T_DISPATCH_TASK</code>
     */
    public static final TDispatchTask T_DISPATCH_TASK = new TDispatchTask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDispatchTaskRecord> getRecordType() {
        return TDispatchTaskRecord.class;
    }

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK.TASK_ID</code>.
     */
    public final TableField<TDispatchTaskRecord, Integer> TASK_ID = createField("TASK_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK.TASK_NAME</code>.
     */
    public final TableField<TDispatchTaskRecord, String> TASK_NAME = createField("TASK_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK.TASK_USER_ID</code>.
     */
    public final TableField<TDispatchTaskRecord, String> TASK_USER_ID = createField("TASK_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK.TASK_SCRIPT</code>.
     */
    public final TableField<TDispatchTaskRecord, String> TASK_SCRIPT = createField("TASK_SCRIPT", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK.TASK_BEGIN_TIME</code>.
     */
    public final TableField<TDispatchTaskRecord, LocalDateTime> TASK_BEGIN_TIME = createField("TASK_BEGIN_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK.TASK_END_TIME</code>.
     */
    public final TableField<TDispatchTaskRecord, LocalDateTime> TASK_END_TIME = createField("TASK_END_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK.TASK_STATUS</code>.
     */
    public final TableField<TDispatchTaskRecord, Byte> TASK_STATUS = createField("TASK_STATUS", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>devops_dispatch.T_DISPATCH_TASK</code> table reference
     */
    public TDispatchTask() {
        this("T_DISPATCH_TASK", null);
    }

    /**
     * Create an aliased <code>devops_dispatch.T_DISPATCH_TASK</code> table reference
     */
    public TDispatchTask(String alias) {
        this(alias, T_DISPATCH_TASK);
    }

    private TDispatchTask(String alias, Table<TDispatchTaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDispatchTask(String alias, Table<TDispatchTaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsDispatch.DEVOPS_DISPATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TDispatchTaskRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_DISPATCH_TASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDispatchTaskRecord> getPrimaryKey() {
        return Keys.KEY_T_DISPATCH_TASK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDispatchTaskRecord>> getKeys() {
        return Arrays.<UniqueKey<TDispatchTaskRecord>>asList(Keys.KEY_T_DISPATCH_TASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDispatchTask as(String alias) {
        return new TDispatchTask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDispatchTask rename(String name) {
        return new TDispatchTask(name, null);
    }
}
