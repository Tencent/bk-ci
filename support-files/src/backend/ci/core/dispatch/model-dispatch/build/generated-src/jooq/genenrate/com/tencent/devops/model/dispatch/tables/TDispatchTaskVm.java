/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.dispatch.tables;


import com.tencent.devops.model.dispatch.DevopsDispatch;
import com.tencent.devops.model.dispatch.Keys;
import com.tencent.devops.model.dispatch.tables.records.TDispatchTaskVmRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDispatchTaskVm extends TableImpl<TDispatchTaskVmRecord> {

    private static final long serialVersionUID = -714162681;

    /**
     * The reference instance of <code>devops_dispatch.T_DISPATCH_TASK_VM</code>
     */
    public static final TDispatchTaskVm T_DISPATCH_TASK_VM = new TDispatchTaskVm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDispatchTaskVmRecord> getRecordType() {
        return TDispatchTaskVmRecord.class;
    }

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK_VM.ID</code>.
     */
    public final TableField<TDispatchTaskVmRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK_VM.TASK_ID</code>.
     */
    public final TableField<TDispatchTaskVmRecord, Integer> TASK_ID = createField("TASK_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK_VM.VM_ID</code>.
     */
    public final TableField<TDispatchTaskVmRecord, Integer> VM_ID = createField("VM_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_dispatch.T_DISPATCH_TASK_VM.STATUS</code>.
     */
    public final TableField<TDispatchTaskVmRecord, Byte> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>devops_dispatch.T_DISPATCH_TASK_VM</code> table reference
     */
    public TDispatchTaskVm() {
        this("T_DISPATCH_TASK_VM", null);
    }

    /**
     * Create an aliased <code>devops_dispatch.T_DISPATCH_TASK_VM</code> table reference
     */
    public TDispatchTaskVm(String alias) {
        this(alias, T_DISPATCH_TASK_VM);
    }

    private TDispatchTaskVm(String alias, Table<TDispatchTaskVmRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDispatchTaskVm(String alias, Table<TDispatchTaskVmRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsDispatch.DEVOPS_DISPATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TDispatchTaskVmRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_DISPATCH_TASK_VM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDispatchTaskVmRecord> getPrimaryKey() {
        return Keys.KEY_T_DISPATCH_TASK_VM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDispatchTaskVmRecord>> getKeys() {
        return Arrays.<UniqueKey<TDispatchTaskVmRecord>>asList(Keys.KEY_T_DISPATCH_TASK_VM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDispatchTaskVm as(String alias) {
        return new TDispatchTaskVm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDispatchTaskVm rename(String name) {
        return new TDispatchTaskVm(name, null);
    }
}
