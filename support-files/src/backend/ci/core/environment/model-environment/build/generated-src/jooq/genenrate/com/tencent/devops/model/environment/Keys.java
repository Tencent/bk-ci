/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.environment;


import com.tencent.devops.model.environment.tables.TAgentFailureNotifyUser;
import com.tencent.devops.model.environment.tables.TBcsCluster;
import com.tencent.devops.model.environment.tables.TDevCloudTask;
import com.tencent.devops.model.environment.tables.TEnv;
import com.tencent.devops.model.environment.tables.TEnvNode;
import com.tencent.devops.model.environment.tables.TEnvironmentAgentPipeline;
import com.tencent.devops.model.environment.tables.TEnvironmentSlaveGateway;
import com.tencent.devops.model.environment.tables.TEnvironmentThirdpartyAgent;
import com.tencent.devops.model.environment.tables.TEnvironmentThirdpartyAgentAction;
import com.tencent.devops.model.environment.tables.TEnvironmentThirdpartyAgentEnv;
import com.tencent.devops.model.environment.tables.TEnvironmentThirdpartyEnableProjects;
import com.tencent.devops.model.environment.tables.TNode;
import com.tencent.devops.model.environment.tables.TProjectConfig;
import com.tencent.devops.model.environment.tables.TTstackNode;
import com.tencent.devops.model.environment.tables.records.TAgentFailureNotifyUserRecord;
import com.tencent.devops.model.environment.tables.records.TBcsClusterRecord;
import com.tencent.devops.model.environment.tables.records.TDevCloudTaskRecord;
import com.tencent.devops.model.environment.tables.records.TEnvNodeRecord;
import com.tencent.devops.model.environment.tables.records.TEnvRecord;
import com.tencent.devops.model.environment.tables.records.TEnvironmentAgentPipelineRecord;
import com.tencent.devops.model.environment.tables.records.TEnvironmentSlaveGatewayRecord;
import com.tencent.devops.model.environment.tables.records.TEnvironmentThirdpartyAgentActionRecord;
import com.tencent.devops.model.environment.tables.records.TEnvironmentThirdpartyAgentEnvRecord;
import com.tencent.devops.model.environment.tables.records.TEnvironmentThirdpartyAgentRecord;
import com.tencent.devops.model.environment.tables.records.TEnvironmentThirdpartyEnableProjectsRecord;
import com.tencent.devops.model.environment.tables.records.TNodeRecord;
import com.tencent.devops.model.environment.tables.records.TProjectConfigRecord;
import com.tencent.devops.model.environment.tables.records.TTstackNodeRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>devops_environment</code> 
 * schema
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TAgentFailureNotifyUserRecord, Long> IDENTITY_T_AGENT_FAILURE_NOTIFY_USER = Identities0.IDENTITY_T_AGENT_FAILURE_NOTIFY_USER;
    public static final Identity<TDevCloudTaskRecord, Long> IDENTITY_T_DEV_CLOUD_TASK = Identities0.IDENTITY_T_DEV_CLOUD_TASK;
    public static final Identity<TEnvRecord, Long> IDENTITY_T_ENV = Identities0.IDENTITY_T_ENV;
    public static final Identity<TEnvironmentAgentPipelineRecord, Long> IDENTITY_T_ENVIRONMENT_AGENT_PIPELINE = Identities0.IDENTITY_T_ENVIRONMENT_AGENT_PIPELINE;
    public static final Identity<TEnvironmentSlaveGatewayRecord, Long> IDENTITY_T_ENVIRONMENT_SLAVE_GATEWAY = Identities0.IDENTITY_T_ENVIRONMENT_SLAVE_GATEWAY;
    public static final Identity<TEnvironmentThirdpartyAgentRecord, Long> IDENTITY_T_ENVIRONMENT_THIRDPARTY_AGENT = Identities0.IDENTITY_T_ENVIRONMENT_THIRDPARTY_AGENT;
    public static final Identity<TEnvironmentThirdpartyAgentActionRecord, Long> IDENTITY_T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION = Identities0.IDENTITY_T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION;
    public static final Identity<TNodeRecord, Long> IDENTITY_T_NODE = Identities0.IDENTITY_T_NODE;
    public static final Identity<TTstackNodeRecord, Long> IDENTITY_T_TSTACK_NODE = Identities0.IDENTITY_T_TSTACK_NODE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TAgentFailureNotifyUserRecord> KEY_T_AGENT_FAILURE_NOTIFY_USER_PRIMARY = UniqueKeys0.KEY_T_AGENT_FAILURE_NOTIFY_USER_PRIMARY;
    public static final UniqueKey<TAgentFailureNotifyUserRecord> KEY_T_AGENT_FAILURE_NOTIFY_USER_USER_ID = UniqueKeys0.KEY_T_AGENT_FAILURE_NOTIFY_USER_USER_ID;
    public static final UniqueKey<TBcsClusterRecord> KEY_T_BCS_CLUSTER_PRIMARY = UniqueKeys0.KEY_T_BCS_CLUSTER_PRIMARY;
    public static final UniqueKey<TDevCloudTaskRecord> KEY_T_DEV_CLOUD_TASK_PRIMARY = UniqueKeys0.KEY_T_DEV_CLOUD_TASK_PRIMARY;
    public static final UniqueKey<TEnvRecord> KEY_T_ENV_PRIMARY = UniqueKeys0.KEY_T_ENV_PRIMARY;
    public static final UniqueKey<TEnvironmentAgentPipelineRecord> KEY_T_ENVIRONMENT_AGENT_PIPELINE_PRIMARY = UniqueKeys0.KEY_T_ENVIRONMENT_AGENT_PIPELINE_PRIMARY;
    public static final UniqueKey<TEnvironmentSlaveGatewayRecord> KEY_T_ENVIRONMENT_SLAVE_GATEWAY_PRIMARY = UniqueKeys0.KEY_T_ENVIRONMENT_SLAVE_GATEWAY_PRIMARY;
    public static final UniqueKey<TEnvironmentSlaveGatewayRecord> KEY_T_ENVIRONMENT_SLAVE_GATEWAY_NAME = UniqueKeys0.KEY_T_ENVIRONMENT_SLAVE_GATEWAY_NAME;
    public static final UniqueKey<TEnvironmentThirdpartyAgentRecord> KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_PRIMARY = UniqueKeys0.KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_PRIMARY;
    public static final UniqueKey<TEnvironmentThirdpartyAgentActionRecord> KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION_PRIMARY = UniqueKeys0.KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION_PRIMARY;
    public static final UniqueKey<TEnvironmentThirdpartyAgentEnvRecord> KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_ENV_PRIMARY = UniqueKeys0.KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_ENV_PRIMARY;
    public static final UniqueKey<TEnvironmentThirdpartyEnableProjectsRecord> KEY_T_ENVIRONMENT_THIRDPARTY_ENABLE_PROJECTS_PRIMARY = UniqueKeys0.KEY_T_ENVIRONMENT_THIRDPARTY_ENABLE_PROJECTS_PRIMARY;
    public static final UniqueKey<TEnvNodeRecord> KEY_T_ENV_NODE_PRIMARY = UniqueKeys0.KEY_T_ENV_NODE_PRIMARY;
    public static final UniqueKey<TNodeRecord> KEY_T_NODE_PRIMARY = UniqueKeys0.KEY_T_NODE_PRIMARY;
    public static final UniqueKey<TProjectConfigRecord> KEY_T_PROJECT_CONFIG_PRIMARY = UniqueKeys0.KEY_T_PROJECT_CONFIG_PRIMARY;
    public static final UniqueKey<TTstackNodeRecord> KEY_T_TSTACK_NODE_PRIMARY = UniqueKeys0.KEY_T_TSTACK_NODE_PRIMARY;
    public static final UniqueKey<TTstackNodeRecord> KEY_T_TSTACK_NODE_TSTACK_VM_ID = UniqueKeys0.KEY_T_TSTACK_NODE_TSTACK_VM_ID;
    public static final UniqueKey<TTstackNodeRecord> KEY_T_TSTACK_NODE_VM_IP = UniqueKeys0.KEY_T_TSTACK_NODE_VM_IP;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<TAgentFailureNotifyUserRecord, Long> IDENTITY_T_AGENT_FAILURE_NOTIFY_USER = createIdentity(TAgentFailureNotifyUser.T_AGENT_FAILURE_NOTIFY_USER, TAgentFailureNotifyUser.T_AGENT_FAILURE_NOTIFY_USER.ID);
        public static Identity<TDevCloudTaskRecord, Long> IDENTITY_T_DEV_CLOUD_TASK = createIdentity(TDevCloudTask.T_DEV_CLOUD_TASK, TDevCloudTask.T_DEV_CLOUD_TASK.TASK_ID);
        public static Identity<TEnvRecord, Long> IDENTITY_T_ENV = createIdentity(TEnv.T_ENV, TEnv.T_ENV.ENV_ID);
        public static Identity<TEnvironmentAgentPipelineRecord, Long> IDENTITY_T_ENVIRONMENT_AGENT_PIPELINE = createIdentity(TEnvironmentAgentPipeline.T_ENVIRONMENT_AGENT_PIPELINE, TEnvironmentAgentPipeline.T_ENVIRONMENT_AGENT_PIPELINE.ID);
        public static Identity<TEnvironmentSlaveGatewayRecord, Long> IDENTITY_T_ENVIRONMENT_SLAVE_GATEWAY = createIdentity(TEnvironmentSlaveGateway.T_ENVIRONMENT_SLAVE_GATEWAY, TEnvironmentSlaveGateway.T_ENVIRONMENT_SLAVE_GATEWAY.ID);
        public static Identity<TEnvironmentThirdpartyAgentRecord, Long> IDENTITY_T_ENVIRONMENT_THIRDPARTY_AGENT = createIdentity(TEnvironmentThirdpartyAgent.T_ENVIRONMENT_THIRDPARTY_AGENT, TEnvironmentThirdpartyAgent.T_ENVIRONMENT_THIRDPARTY_AGENT.ID);
        public static Identity<TEnvironmentThirdpartyAgentActionRecord, Long> IDENTITY_T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION = createIdentity(TEnvironmentThirdpartyAgentAction.T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION, TEnvironmentThirdpartyAgentAction.T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION.ID);
        public static Identity<TNodeRecord, Long> IDENTITY_T_NODE = createIdentity(TNode.T_NODE, TNode.T_NODE.NODE_ID);
        public static Identity<TTstackNodeRecord, Long> IDENTITY_T_TSTACK_NODE = createIdentity(TTstackNode.T_TSTACK_NODE, TTstackNode.T_TSTACK_NODE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<TAgentFailureNotifyUserRecord> KEY_T_AGENT_FAILURE_NOTIFY_USER_PRIMARY = createUniqueKey(TAgentFailureNotifyUser.T_AGENT_FAILURE_NOTIFY_USER, "KEY_T_AGENT_FAILURE_NOTIFY_USER_PRIMARY", TAgentFailureNotifyUser.T_AGENT_FAILURE_NOTIFY_USER.ID);
        public static final UniqueKey<TAgentFailureNotifyUserRecord> KEY_T_AGENT_FAILURE_NOTIFY_USER_USER_ID = createUniqueKey(TAgentFailureNotifyUser.T_AGENT_FAILURE_NOTIFY_USER, "KEY_T_AGENT_FAILURE_NOTIFY_USER_USER_ID", TAgentFailureNotifyUser.T_AGENT_FAILURE_NOTIFY_USER.USER_ID);
        public static final UniqueKey<TBcsClusterRecord> KEY_T_BCS_CLUSTER_PRIMARY = createUniqueKey(TBcsCluster.T_BCS_CLUSTER, "KEY_T_BCS_CLUSTER_PRIMARY", TBcsCluster.T_BCS_CLUSTER.CLUSTER_ID);
        public static final UniqueKey<TDevCloudTaskRecord> KEY_T_DEV_CLOUD_TASK_PRIMARY = createUniqueKey(TDevCloudTask.T_DEV_CLOUD_TASK, "KEY_T_DEV_CLOUD_TASK_PRIMARY", TDevCloudTask.T_DEV_CLOUD_TASK.TASK_ID);
        public static final UniqueKey<TEnvRecord> KEY_T_ENV_PRIMARY = createUniqueKey(TEnv.T_ENV, "KEY_T_ENV_PRIMARY", TEnv.T_ENV.ENV_ID);
        public static final UniqueKey<TEnvironmentAgentPipelineRecord> KEY_T_ENVIRONMENT_AGENT_PIPELINE_PRIMARY = createUniqueKey(TEnvironmentAgentPipeline.T_ENVIRONMENT_AGENT_PIPELINE, "KEY_T_ENVIRONMENT_AGENT_PIPELINE_PRIMARY", TEnvironmentAgentPipeline.T_ENVIRONMENT_AGENT_PIPELINE.ID);
        public static final UniqueKey<TEnvironmentSlaveGatewayRecord> KEY_T_ENVIRONMENT_SLAVE_GATEWAY_PRIMARY = createUniqueKey(TEnvironmentSlaveGateway.T_ENVIRONMENT_SLAVE_GATEWAY, "KEY_T_ENVIRONMENT_SLAVE_GATEWAY_PRIMARY", TEnvironmentSlaveGateway.T_ENVIRONMENT_SLAVE_GATEWAY.ID);
        public static final UniqueKey<TEnvironmentSlaveGatewayRecord> KEY_T_ENVIRONMENT_SLAVE_GATEWAY_NAME = createUniqueKey(TEnvironmentSlaveGateway.T_ENVIRONMENT_SLAVE_GATEWAY, "KEY_T_ENVIRONMENT_SLAVE_GATEWAY_NAME", TEnvironmentSlaveGateway.T_ENVIRONMENT_SLAVE_GATEWAY.NAME);
        public static final UniqueKey<TEnvironmentThirdpartyAgentRecord> KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_PRIMARY = createUniqueKey(TEnvironmentThirdpartyAgent.T_ENVIRONMENT_THIRDPARTY_AGENT, "KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_PRIMARY", TEnvironmentThirdpartyAgent.T_ENVIRONMENT_THIRDPARTY_AGENT.ID);
        public static final UniqueKey<TEnvironmentThirdpartyAgentActionRecord> KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION_PRIMARY = createUniqueKey(TEnvironmentThirdpartyAgentAction.T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION, "KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION_PRIMARY", TEnvironmentThirdpartyAgentAction.T_ENVIRONMENT_THIRDPARTY_AGENT_ACTION.ID);
        public static final UniqueKey<TEnvironmentThirdpartyAgentEnvRecord> KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_ENV_PRIMARY = createUniqueKey(TEnvironmentThirdpartyAgentEnv.T_ENVIRONMENT_THIRDPARTY_AGENT_ENV, "KEY_T_ENVIRONMENT_THIRDPARTY_AGENT_ENV_PRIMARY", TEnvironmentThirdpartyAgentEnv.T_ENVIRONMENT_THIRDPARTY_AGENT_ENV.AGENT_ID, TEnvironmentThirdpartyAgentEnv.T_ENVIRONMENT_THIRDPARTY_AGENT_ENV.ENV_KEY);
        public static final UniqueKey<TEnvironmentThirdpartyEnableProjectsRecord> KEY_T_ENVIRONMENT_THIRDPARTY_ENABLE_PROJECTS_PRIMARY = createUniqueKey(TEnvironmentThirdpartyEnableProjects.T_ENVIRONMENT_THIRDPARTY_ENABLE_PROJECTS, "KEY_T_ENVIRONMENT_THIRDPARTY_ENABLE_PROJECTS_PRIMARY", TEnvironmentThirdpartyEnableProjects.T_ENVIRONMENT_THIRDPARTY_ENABLE_PROJECTS.PROJECT_ID);
        public static final UniqueKey<TEnvNodeRecord> KEY_T_ENV_NODE_PRIMARY = createUniqueKey(TEnvNode.T_ENV_NODE, "KEY_T_ENV_NODE_PRIMARY", TEnvNode.T_ENV_NODE.ENV_ID, TEnvNode.T_ENV_NODE.NODE_ID);
        public static final UniqueKey<TNodeRecord> KEY_T_NODE_PRIMARY = createUniqueKey(TNode.T_NODE, "KEY_T_NODE_PRIMARY", TNode.T_NODE.NODE_ID);
        public static final UniqueKey<TProjectConfigRecord> KEY_T_PROJECT_CONFIG_PRIMARY = createUniqueKey(TProjectConfig.T_PROJECT_CONFIG, "KEY_T_PROJECT_CONFIG_PRIMARY", TProjectConfig.T_PROJECT_CONFIG.PROJECT_ID);
        public static final UniqueKey<TTstackNodeRecord> KEY_T_TSTACK_NODE_PRIMARY = createUniqueKey(TTstackNode.T_TSTACK_NODE, "KEY_T_TSTACK_NODE_PRIMARY", TTstackNode.T_TSTACK_NODE.ID);
        public static final UniqueKey<TTstackNodeRecord> KEY_T_TSTACK_NODE_TSTACK_VM_ID = createUniqueKey(TTstackNode.T_TSTACK_NODE, "KEY_T_TSTACK_NODE_TSTACK_VM_ID", TTstackNode.T_TSTACK_NODE.TSTACK_VM_ID);
        public static final UniqueKey<TTstackNodeRecord> KEY_T_TSTACK_NODE_VM_IP = createUniqueKey(TTstackNode.T_TSTACK_NODE, "KEY_T_TSTACK_NODE_VM_IP", TTstackNode.T_TSTACK_NODE.VM_IP);
    }
}
