/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.notify.tables.records;


import com.tencent.devops.model.notify.tables.TEmailNotifyMessageTemplate;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 邮件通知模板表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TEmailNotifyMessageTemplateRecord extends UpdatableRecordImpl<TEmailNotifyMessageTemplateRecord> implements Record8<String, String, Byte, Byte, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -682991618;

    /**
     * Setter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.ID</code>. 主键
     */
    public TEmailNotifyMessageTemplateRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.ID</code>. 主键
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.BASE_TEMPLATE_ID</code>. 模板ID（对应T_BASE_NOTIFY_MESSAGE_TEMPLATE表的主键）
     */
    public TEmailNotifyMessageTemplateRecord setBaseTemplateId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.BASE_TEMPLATE_ID</code>. 模板ID（对应T_BASE_NOTIFY_MESSAGE_TEMPLATE表的主键）
     */
    public String getBaseTemplateId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.BODY_FORMAT</code>. 邮件格式（0:文本 1:html网页）
     */
    public TEmailNotifyMessageTemplateRecord setBodyFormat(Byte value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.BODY_FORMAT</code>. 邮件格式（0:文本 1:html网页）
     */
    public Byte getBodyFormat() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.EMAIL_TYPE</code>. 邮件类型（0:外部邮件 1:内部邮件）
     */
    public TEmailNotifyMessageTemplateRecord setEmailType(Byte value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.EMAIL_TYPE</code>. 邮件类型（0:外部邮件 1:内部邮件）
     */
    public Byte getEmailType() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.CREATOR</code>. 创建人
     */
    public TEmailNotifyMessageTemplateRecord setCreator(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.CREATOR</code>. 创建人
     */
    public String getCreator() {
        return (String) get(4);
    }

    /**
     * Setter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.MODIFIER</code>. 最近修改人
     */
    public TEmailNotifyMessageTemplateRecord setModifier(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.MODIFIER</code>. 最近修改人
     */
    public String getModifier() {
        return (String) get(5);
    }

    /**
     * Setter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.CREATE_TIME</code>. 创建时间
     */
    public TEmailNotifyMessageTemplateRecord setCreateTime(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.CREATE_TIME</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.UPDATE_TIME</code>. 更新时间
     */
    public TEmailNotifyMessageTemplateRecord setUpdateTime(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>devops_notify.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.UPDATE_TIME</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, Byte, Byte, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, Byte, Byte, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.BASE_TEMPLATE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.BODY_FORMAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.EMAIL_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.CREATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.MODIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field7() {
        return TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field8() {
        return TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBaseTemplateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getBodyFormat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getEmailType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCreator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getModifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value7() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value8() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord value2(String value) {
        setBaseTemplateId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord value3(Byte value) {
        setBodyFormat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord value4(Byte value) {
        setEmailType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord value5(String value) {
        setCreator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord value6(String value) {
        setModifier(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord value7(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord value8(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEmailNotifyMessageTemplateRecord values(String value1, String value2, Byte value3, Byte value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TEmailNotifyMessageTemplateRecord
     */
    public TEmailNotifyMessageTemplateRecord() {
        super(TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE);
    }

    /**
     * Create a detached, initialised TEmailNotifyMessageTemplateRecord
     */
    public TEmailNotifyMessageTemplateRecord(String id, String baseTemplateId, Byte bodyFormat, Byte emailType, String creator, String modifier, LocalDateTime createTime, LocalDateTime updateTime) {
        super(TEmailNotifyMessageTemplate.T_EMAIL_NOTIFY_MESSAGE_TEMPLATE);

        set(0, id);
        set(1, baseTemplateId);
        set(2, bodyFormat);
        set(3, emailType);
        set(4, creator);
        set(5, modifier);
        set(6, createTime);
        set(7, updateTime);
    }
}
