/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.plugin.tables;


import com.tencent.devops.model.plugin.DevopsPlugin;
import com.tencent.devops.model.plugin.Keys;
import com.tencent.devops.model.plugin.tables.records.TPluginCodeccRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPluginCodecc extends TableImpl<TPluginCodeccRecord> {

    private static final long serialVersionUID = -1873426010;

    /**
     * The reference instance of <code>devops_plugin.T_PLUGIN_CODECC</code>
     */
    public static final TPluginCodecc T_PLUGIN_CODECC = new TPluginCodecc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPluginCodeccRecord> getRecordType() {
        return TPluginCodeccRecord.class;
    }

    /**
     * The column <code>devops_plugin.T_PLUGIN_CODECC.ID</code>.
     */
    public final TableField<TPluginCodeccRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_CODECC.PROJECT_ID</code>.
     */
    public final TableField<TPluginCodeccRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_CODECC.PIPELINE_ID</code>.
     */
    public final TableField<TPluginCodeccRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(34), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_CODECC.BUILD_ID</code>.
     */
    public final TableField<TPluginCodeccRecord, String> BUILD_ID = createField("BUILD_ID", org.jooq.impl.SQLDataType.VARCHAR.length(34), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_CODECC.TASK_ID</code>.
     */
    public final TableField<TPluginCodeccRecord, String> TASK_ID = createField("TASK_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_CODECC.TOOL_SNAPSHOT_LIST</code>.
     */
    public final TableField<TPluginCodeccRecord, String> TOOL_SNAPSHOT_LIST = createField("TOOL_SNAPSHOT_LIST", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>devops_plugin.T_PLUGIN_CODECC</code> table reference
     */
    public TPluginCodecc() {
        this("T_PLUGIN_CODECC", null);
    }

    /**
     * Create an aliased <code>devops_plugin.T_PLUGIN_CODECC</code> table reference
     */
    public TPluginCodecc(String alias) {
        this(alias, T_PLUGIN_CODECC);
    }

    private TPluginCodecc(String alias, Table<TPluginCodeccRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPluginCodecc(String alias, Table<TPluginCodeccRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsPlugin.DEVOPS_PLUGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPluginCodeccRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_PLUGIN_CODECC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPluginCodeccRecord> getPrimaryKey() {
        return Keys.KEY_T_PLUGIN_CODECC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPluginCodeccRecord>> getKeys() {
        return Arrays.<UniqueKey<TPluginCodeccRecord>>asList(Keys.KEY_T_PLUGIN_CODECC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPluginCodecc as(String alias) {
        return new TPluginCodecc(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPluginCodecc rename(String name) {
        return new TPluginCodecc(name, null);
    }
}
