/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.plugin.tables;


import com.tencent.devops.model.plugin.DevopsPlugin;
import com.tencent.devops.model.plugin.Keys;
import com.tencent.devops.model.plugin.tables.records.TPluginGithubCheckRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPluginGithubCheck extends TableImpl<TPluginGithubCheckRecord> {

    private static final long serialVersionUID = 842458269;

    /**
     * The reference instance of <code>devops_plugin.T_PLUGIN_GITHUB_CHECK</code>
     */
    public static final TPluginGithubCheck T_PLUGIN_GITHUB_CHECK = new TPluginGithubCheck();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPluginGithubCheckRecord> getRecordType() {
        return TPluginGithubCheckRecord.class;
    }

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.ID</code>.
     */
    public final TableField<TPluginGithubCheckRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.PIPELINE_ID</code>.
     */
    public final TableField<TPluginGithubCheckRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.BUILD_NUMBER</code>.
     */
    public final TableField<TPluginGithubCheckRecord, Integer> BUILD_NUMBER = createField("BUILD_NUMBER", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.REPO_ID</code>.
     */
    public final TableField<TPluginGithubCheckRecord, String> REPO_ID = createField("REPO_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.COMMIT_ID</code>.
     */
    public final TableField<TPluginGithubCheckRecord, String> COMMIT_ID = createField("COMMIT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.CHECK_RUN_ID</code>.
     */
    public final TableField<TPluginGithubCheckRecord, Integer> CHECK_RUN_ID = createField("CHECK_RUN_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.CREATE_TIME</code>.
     */
    public final TableField<TPluginGithubCheckRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.UPDATE_TIME</code>.
     */
    public final TableField<TPluginGithubCheckRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_GITHUB_CHECK.REPO_NAME</code>.
     */
    public final TableField<TPluginGithubCheckRecord, String> REPO_NAME = createField("REPO_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * Create a <code>devops_plugin.T_PLUGIN_GITHUB_CHECK</code> table reference
     */
    public TPluginGithubCheck() {
        this("T_PLUGIN_GITHUB_CHECK", null);
    }

    /**
     * Create an aliased <code>devops_plugin.T_PLUGIN_GITHUB_CHECK</code> table reference
     */
    public TPluginGithubCheck(String alias) {
        this(alias, T_PLUGIN_GITHUB_CHECK);
    }

    private TPluginGithubCheck(String alias, Table<TPluginGithubCheckRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPluginGithubCheck(String alias, Table<TPluginGithubCheckRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsPlugin.DEVOPS_PLUGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPluginGithubCheckRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_PLUGIN_GITHUB_CHECK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPluginGithubCheckRecord> getPrimaryKey() {
        return Keys.KEY_T_PLUGIN_GITHUB_CHECK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPluginGithubCheckRecord>> getKeys() {
        return Arrays.<UniqueKey<TPluginGithubCheckRecord>>asList(Keys.KEY_T_PLUGIN_GITHUB_CHECK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPluginGithubCheck as(String alias) {
        return new TPluginGithubCheck(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPluginGithubCheck rename(String name) {
        return new TPluginGithubCheck(name, null);
    }
}
