/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.plugin.tables;


import com.tencent.devops.model.plugin.DevopsPlugin;
import com.tencent.devops.model.plugin.Keys;
import com.tencent.devops.model.plugin.tables.records.TPluginJingangRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPluginJingang extends TableImpl<TPluginJingangRecord> {

    private static final long serialVersionUID = -150315336;

    /**
     * The reference instance of <code>devops_plugin.T_PLUGIN_JINGANG</code>
     */
    public static final TPluginJingang T_PLUGIN_JINGANG = new TPluginJingang();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPluginJingangRecord> getRecordType() {
        return TPluginJingangRecord.class;
    }

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.ID</code>.
     */
    public final TableField<TPluginJingangRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.PROJECT_ID</code>.
     */
    public final TableField<TPluginJingangRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.PIPELINE_ID</code>.
     */
    public final TableField<TPluginJingangRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.BUILD_ID</code>.
     */
    public final TableField<TPluginJingangRecord, String> BUILD_ID = createField("BUILD_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.BUILD_NO</code>.
     */
    public final TableField<TPluginJingangRecord, Integer> BUILD_NO = createField("BUILD_NO", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.USER_ID</code>.
     */
    public final TableField<TPluginJingangRecord, String> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.FILE_PATH</code>.
     */
    public final TableField<TPluginJingangRecord, String> FILE_PATH = createField("FILE_PATH", org.jooq.impl.SQLDataType.VARCHAR.length(4096), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.FILE_MD5</code>.
     */
    public final TableField<TPluginJingangRecord, String> FILE_MD5 = createField("FILE_MD5", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.FILE_SIZE</code>.
     */
    public final TableField<TPluginJingangRecord, Long> FILE_SIZE = createField("FILE_SIZE", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.VERSION</code>. 版本号
     */
    public final TableField<TPluginJingangRecord, String> VERSION = createField("VERSION", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "版本号");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.CREATE_TIME</code>.
     */
    public final TableField<TPluginJingangRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.UPDATE_TIME</code>.
     */
    public final TableField<TPluginJingangRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.STATUS</code>. (0:成功，其他失败，没有则是执行中)
     */
    public final TableField<TPluginJingangRecord, Integer> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.INTEGER, this, "(0:成功，其他失败，没有则是执行中)");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.TYPE</code>. (0:android,1:ios)
     */
    public final TableField<TPluginJingangRecord, Integer> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "(0:android,1:ios)");

    /**
     * The column <code>devops_plugin.T_PLUGIN_JINGANG.SCAN_URL</code>.
     */
    public final TableField<TPluginJingangRecord, String> SCAN_URL = createField("SCAN_URL", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * Create a <code>devops_plugin.T_PLUGIN_JINGANG</code> table reference
     */
    public TPluginJingang() {
        this("T_PLUGIN_JINGANG", null);
    }

    /**
     * Create an aliased <code>devops_plugin.T_PLUGIN_JINGANG</code> table reference
     */
    public TPluginJingang(String alias) {
        this(alias, T_PLUGIN_JINGANG);
    }

    private TPluginJingang(String alias, Table<TPluginJingangRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPluginJingang(String alias, Table<TPluginJingangRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsPlugin.DEVOPS_PLUGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPluginJingangRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_PLUGIN_JINGANG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPluginJingangRecord> getPrimaryKey() {
        return Keys.KEY_T_PLUGIN_JINGANG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPluginJingangRecord>> getKeys() {
        return Arrays.<UniqueKey<TPluginJingangRecord>>asList(Keys.KEY_T_PLUGIN_JINGANG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPluginJingang as(String alias) {
        return new TPluginJingang(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPluginJingang rename(String name) {
        return new TPluginJingang(name, null);
    }
}
