/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.plugin.tables;


import com.tencent.devops.model.plugin.DevopsPlugin;
import com.tencent.devops.model.plugin.Keys;
import com.tencent.devops.model.plugin.tables.records.TPluginTaskDataRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPluginTaskData extends TableImpl<TPluginTaskDataRecord> {

    private static final long serialVersionUID = 696724714;

    /**
     * The reference instance of <code>devops_plugin.T_PLUGIN_TASK_DATA</code>
     */
    public static final TPluginTaskData T_PLUGIN_TASK_DATA = new TPluginTaskData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPluginTaskDataRecord> getRecordType() {
        return TPluginTaskDataRecord.class;
    }

    /**
     * The column <code>devops_plugin.T_PLUGIN_TASK_DATA.PROJECT_ID</code>.
     */
    public final TableField<TPluginTaskDataRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_TASK_DATA.PIPELINE_ID</code>.
     */
    public final TableField<TPluginTaskDataRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_TASK_DATA.BUILD_ID</code>.
     */
    public final TableField<TPluginTaskDataRecord, String> BUILD_ID = createField("BUILD_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_TASK_DATA.VM_SEQ_ID</code>.
     */
    public final TableField<TPluginTaskDataRecord, String> VM_SEQ_ID = createField("VM_SEQ_ID", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_TASK_DATA.AGENT_ID</code>.
     */
    public final TableField<TPluginTaskDataRecord, String> AGENT_ID = createField("AGENT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_TASK_DATA.SECRET_KEY</code>.
     */
    public final TableField<TPluginTaskDataRecord, String> SECRET_KEY = createField("SECRET_KEY", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_TASK_DATA.CREATE_TIME</code>.
     */
    public final TableField<TPluginTaskDataRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_TASK_DATA.UPDATE_TIME</code>.
     */
    public final TableField<TPluginTaskDataRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>devops_plugin.T_PLUGIN_TASK_DATA</code> table reference
     */
    public TPluginTaskData() {
        this("T_PLUGIN_TASK_DATA", null);
    }

    /**
     * Create an aliased <code>devops_plugin.T_PLUGIN_TASK_DATA</code> table reference
     */
    public TPluginTaskData(String alias) {
        this(alias, T_PLUGIN_TASK_DATA);
    }

    private TPluginTaskData(String alias, Table<TPluginTaskDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPluginTaskData(String alias, Table<TPluginTaskDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsPlugin.DEVOPS_PLUGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPluginTaskDataRecord> getPrimaryKey() {
        return Keys.KEY_T_PLUGIN_TASK_DATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPluginTaskDataRecord>> getKeys() {
        return Arrays.<UniqueKey<TPluginTaskDataRecord>>asList(Keys.KEY_T_PLUGIN_TASK_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPluginTaskData as(String alias) {
        return new TPluginTaskData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPluginTaskData rename(String name) {
        return new TPluginTaskData(name, null);
    }
}
