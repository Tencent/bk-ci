/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.plugin.tables;


import com.tencent.devops.model.plugin.DevopsPlugin;
import com.tencent.devops.model.plugin.Keys;
import com.tencent.devops.model.plugin.tables.records.TPluginWetestTaskInstRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPluginWetestTaskInst extends TableImpl<TPluginWetestTaskInstRecord> {

    private static final long serialVersionUID = -1595391232;

    /**
     * The reference instance of <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST</code>
     */
    public static final TPluginWetestTaskInst T_PLUGIN_WETEST_TASK_INST = new TPluginWetestTaskInst();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPluginWetestTaskInstRecord> getRecordType() {
        return TPluginWetestTaskInstRecord.class;
    }

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.ID</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.TEST_ID</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> TEST_ID = createField("TEST_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.PROJECT_ID</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.PIPELINE_ID</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.BUILD_ID</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> BUILD_ID = createField("BUILD_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.BUILD_NO</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, Integer> BUILD_NO = createField("BUILD_NO", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.NAME</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.VERSION</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> VERSION = createField("VERSION", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.PASSING_RATE</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> PASSING_RATE = createField("PASSING_RATE", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.TASK_ID</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, Integer> TASK_ID = createField("TASK_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.TEST_TYPE</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> TEST_TYPE = createField("TEST_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.SCRIPT_TYPE</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> SCRIPT_TYPE = createField("SCRIPT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.IS_SYNC</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> IS_SYNC = createField("IS_SYNC", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.SOURCE_TYPE</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> SOURCE_TYPE = createField("SOURCE_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(12), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.SOURCE_PATH</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> SOURCE_PATH = createField("SOURCE_PATH", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.ACCOUNT_PATH_TYPE</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> ACCOUNT_PATH_TYPE = createField("ACCOUNT_PATH_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(12), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.ACCOUNT_PATH</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> ACCOUNT_PATH = createField("ACCOUNT_PATH", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.SCRIPT_PATH_TYPE</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> SCRIPT_PATH_TYPE = createField("SCRIPT_PATH_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(12), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.SCRIPT_PATH</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> SCRIPT_PATH = createField("SCRIPT_PATH", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.TICKET_ID</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> TICKET_ID = createField("TICKET_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.IS_PRIVATE_CLOUD</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> IS_PRIVATE_CLOUD = createField("IS_PRIVATE_CLOUD", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.START_USER</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, String> START_USER = createField("START_USER", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.BEGIN_TIME</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, LocalDateTime> BEGIN_TIME = createField("BEGIN_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.END_TIME</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, LocalDateTime> END_TIME = createField("END_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.STATUS</code>. RUNNING,FAIL,SUCCESS
     */
    public final TableField<TPluginWetestTaskInstRecord, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "RUNNING,FAIL,SUCCESS");

    /**
     * The column <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST.EMAIL_GROUP_ID</code>.
     */
    public final TableField<TPluginWetestTaskInstRecord, Integer> EMAIL_GROUP_ID = createField("EMAIL_GROUP_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST</code> table reference
     */
    public TPluginWetestTaskInst() {
        this("T_PLUGIN_WETEST_TASK_INST", null);
    }

    /**
     * Create an aliased <code>devops_plugin.T_PLUGIN_WETEST_TASK_INST</code> table reference
     */
    public TPluginWetestTaskInst(String alias) {
        this(alias, T_PLUGIN_WETEST_TASK_INST);
    }

    private TPluginWetestTaskInst(String alias, Table<TPluginWetestTaskInstRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPluginWetestTaskInst(String alias, Table<TPluginWetestTaskInstRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsPlugin.DEVOPS_PLUGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPluginWetestTaskInstRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PLUGIN_WETEST_TASK_INST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPluginWetestTaskInstRecord> getPrimaryKey() {
        return Keys.KEY_T_PLUGIN_WETEST_TASK_INST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPluginWetestTaskInstRecord>> getKeys() {
        return Arrays.<UniqueKey<TPluginWetestTaskInstRecord>>asList(Keys.KEY_T_PLUGIN_WETEST_TASK_INST_PRIMARY, Keys.KEY_T_PLUGIN_WETEST_TASK_INST_TEST_ID_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPluginWetestTaskInst as(String alias) {
        return new TPluginWetestTaskInst(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPluginWetestTaskInst rename(String name) {
        return new TPluginWetestTaskInst(name, null);
    }
}
