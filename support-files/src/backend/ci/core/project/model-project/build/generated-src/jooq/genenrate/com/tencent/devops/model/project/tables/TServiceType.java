/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.project.tables;


import com.tencent.devops.model.project.DevopsProject;
import com.tencent.devops.model.project.Keys;
import com.tencent.devops.model.project.tables.records.TServiceTypeRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TServiceType extends TableImpl<TServiceTypeRecord> {

    private static final long serialVersionUID = -898589362;

    /**
     * The reference instance of <code>devops_project.t_service_type</code>
     */
    public static final TServiceType T_SERVICE_TYPE = new TServiceType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TServiceTypeRecord> getRecordType() {
        return TServiceTypeRecord.class;
    }

    /**
     * The column <code>devops_project.t_service_type.id</code>. 主键id
     */
    public final TableField<TServiceTypeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "主键id");

    /**
     * The column <code>devops_project.t_service_type.title</code>. 标题名称
     */
    public final TableField<TServiceTypeRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "标题名称");

    /**
     * The column <code>devops_project.t_service_type.weight</code>. 排序
     */
    public final TableField<TServiceTypeRecord, Integer> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.INTEGER, this, "排序");

    /**
     * The column <code>devops_project.t_service_type.created_user</code>. 创建人
     */
    public final TableField<TServiceTypeRecord, String> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "创建人");

    /**
     * The column <code>devops_project.t_service_type.created_time</code>. 创建时间
     */
    public final TableField<TServiceTypeRecord, LocalDateTime> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>devops_project.t_service_type.updated_user</code>. 修改人
     */
    public final TableField<TServiceTypeRecord, String> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "修改人");

    /**
     * The column <code>devops_project.t_service_type.updated_time</code>. 修改时间
     */
    public final TableField<TServiceTypeRecord, LocalDateTime> UPDATED_TIME = createField("updated_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "修改时间");

    /**
     * The column <code>devops_project.t_service_type.deleted</code>. 删除标识符
     */
    public final TableField<TServiceTypeRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BIT, this, "删除标识符");

    /**
     * Create a <code>devops_project.t_service_type</code> table reference
     */
    public TServiceType() {
        this("t_service_type", null);
    }

    /**
     * Create an aliased <code>devops_project.t_service_type</code> table reference
     */
    public TServiceType(String alias) {
        this(alias, T_SERVICE_TYPE);
    }

    private TServiceType(String alias, Table<TServiceTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TServiceType(String alias, Table<TServiceTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsProject.DEVOPS_PROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TServiceTypeRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_SERVICE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TServiceTypeRecord> getPrimaryKey() {
        return Keys.KEY_T_SERVICE_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TServiceTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<TServiceTypeRecord>>asList(Keys.KEY_T_SERVICE_TYPE_PRIMARY, Keys.KEY_T_SERVICE_TYPE_TITLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TServiceType as(String alias) {
        return new TServiceType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TServiceType rename(String name) {
        return new TServiceType(name, null);
    }
}
