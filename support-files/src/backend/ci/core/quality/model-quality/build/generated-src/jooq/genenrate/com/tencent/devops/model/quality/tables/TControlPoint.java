/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.quality.tables;


import com.tencent.devops.model.quality.DevopsQuality;
import com.tencent.devops.model.quality.Keys;
import com.tencent.devops.model.quality.tables.records.TControlPointRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TControlPoint extends TableImpl<TControlPointRecord> {

    private static final long serialVersionUID = -1208283957;

    /**
     * The reference instance of <code>devops_quality.T_CONTROL_POINT</code>
     */
    public static final TControlPoint T_CONTROL_POINT = new TControlPoint();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TControlPointRecord> getRecordType() {
        return TControlPointRecord.class;
    }

    /**
     * The column <code>devops_quality.T_CONTROL_POINT.ID</code>.
     */
    public final TableField<TControlPointRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_CONTROL_POINT.NAME</code>.
     */
    public final TableField<TControlPointRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_CONTROL_POINT.TASK_LIST</code>.
     */
    public final TableField<TControlPointRecord, String> TASK_LIST = createField("TASK_LIST", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_CONTROL_POINT.ONLINE</code>.
     */
    public final TableField<TControlPointRecord, Boolean> ONLINE = createField("ONLINE", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_CONTROL_POINT.CREATE_TIME</code>.
     */
    public final TableField<TControlPointRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_CONTROL_POINT.UPDATE_TIME</code>.
     */
    public final TableField<TControlPointRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>devops_quality.T_CONTROL_POINT</code> table reference
     */
    public TControlPoint() {
        this("T_CONTROL_POINT", null);
    }

    /**
     * Create an aliased <code>devops_quality.T_CONTROL_POINT</code> table reference
     */
    public TControlPoint(String alias) {
        this(alias, T_CONTROL_POINT);
    }

    private TControlPoint(String alias, Table<TControlPointRecord> aliased) {
        this(alias, aliased, null);
    }

    private TControlPoint(String alias, Table<TControlPointRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsQuality.DEVOPS_QUALITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TControlPointRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CONTROL_POINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TControlPointRecord> getPrimaryKey() {
        return Keys.KEY_T_CONTROL_POINT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TControlPointRecord>> getKeys() {
        return Arrays.<UniqueKey<TControlPointRecord>>asList(Keys.KEY_T_CONTROL_POINT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TControlPoint as(String alias) {
        return new TControlPoint(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TControlPoint rename(String name) {
        return new TControlPoint(name, null);
    }
}
