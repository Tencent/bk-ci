/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.quality.tables;


import com.tencent.devops.model.quality.DevopsQuality;
import com.tencent.devops.model.quality.Keys;
import com.tencent.devops.model.quality.tables.records.THistoryRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class THistory extends TableImpl<THistoryRecord> {

    private static final long serialVersionUID = 1798461135;

    /**
     * The reference instance of <code>devops_quality.T_HISTORY</code>
     */
    public static final THistory T_HISTORY = new THistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<THistoryRecord> getRecordType() {
        return THistoryRecord.class;
    }

    /**
     * The column <code>devops_quality.T_HISTORY.ID</code>.
     */
    public final TableField<THistoryRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.PROJECT_NUM</code>.
     */
    public final TableField<THistoryRecord, Long> PROJECT_NUM = createField("PROJECT_NUM", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.PROJECT_ID</code>.
     */
    public final TableField<THistoryRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.RULE_ID</code>.
     */
    public final TableField<THistoryRecord, Long> RULE_ID = createField("RULE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.PIPELINE_ID</code>.
     */
    public final TableField<THistoryRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(34).nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.BUILD_ID</code>.
     */
    public final TableField<THistoryRecord, String> BUILD_ID = createField("BUILD_ID", org.jooq.impl.SQLDataType.VARCHAR.length(34).nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.RESULT</code>.
     */
    public final TableField<THistoryRecord, String> RESULT = createField("RESULT", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.INTERCEPT_LIST</code>.
     */
    public final TableField<THistoryRecord, String> INTERCEPT_LIST = createField("INTERCEPT_LIST", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.CREATE_TIME</code>.
     */
    public final TableField<THistoryRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_HISTORY.UPDATE_TIME</code>.
     */
    public final TableField<THistoryRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>devops_quality.T_HISTORY</code> table reference
     */
    public THistory() {
        this("T_HISTORY", null);
    }

    /**
     * Create an aliased <code>devops_quality.T_HISTORY</code> table reference
     */
    public THistory(String alias) {
        this(alias, T_HISTORY);
    }

    private THistory(String alias, Table<THistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private THistory(String alias, Table<THistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsQuality.DEVOPS_QUALITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<THistoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<THistoryRecord> getPrimaryKey() {
        return Keys.KEY_T_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<THistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<THistoryRecord>>asList(Keys.KEY_T_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public THistory as(String alias) {
        return new THistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public THistory rename(String name) {
        return new THistory(name, null);
    }
}
