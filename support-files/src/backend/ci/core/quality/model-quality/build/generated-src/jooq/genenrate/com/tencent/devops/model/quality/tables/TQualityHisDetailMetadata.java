/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.quality.tables;


import com.tencent.devops.model.quality.DevopsQuality;
import com.tencent.devops.model.quality.Keys;
import com.tencent.devops.model.quality.tables.records.TQualityHisDetailMetadataRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 执行结果详细基础数据表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TQualityHisDetailMetadata extends TableImpl<TQualityHisDetailMetadataRecord> {

    private static final long serialVersionUID = -487840424;

    /**
     * The reference instance of <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA</code>
     */
    public static final TQualityHisDetailMetadata T_QUALITY_HIS_DETAIL_METADATA = new TQualityHisDetailMetadata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TQualityHisDetailMetadataRecord> getRecordType() {
        return TQualityHisDetailMetadataRecord.class;
    }

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.ID</code>.
     */
    public final TableField<TQualityHisDetailMetadataRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.DATA_ID</code>. 数据ID
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> DATA_ID = createField("DATA_ID", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "数据ID");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.DATA_NAME</code>. 数据名称
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> DATA_NAME = createField("DATA_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "数据名称");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.DATA_TYPE</code>. 数值类型
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> DATA_TYPE = createField("DATA_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "数值类型");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.DATA_DESC</code>. 说明/备注
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> DATA_DESC = createField("DATA_DESC", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "说明/备注");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.DATA_VALUE</code>. 数据的值
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> DATA_VALUE = createField("DATA_VALUE", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "数据的值");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.ELEMENT_TYPE</code>. 产出原子
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> ELEMENT_TYPE = createField("ELEMENT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "产出原子");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.ELEMENT_DETAIL</code>. 工具/原子子类
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> ELEMENT_DETAIL = createField("ELEMENT_DETAIL", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "工具/原子子类");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.PROJECT_ID</code>. 项目ID
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "项目ID");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.PIPELINE_ID</code>. 流水线ID
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> PIPELINE_ID = createField("PIPELINE_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "流水线ID");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.BUILD_ID</code>. 构建ID
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> BUILD_ID = createField("BUILD_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "构建ID");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.BUILD_NO</code>. 构建号
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> BUILD_NO = createField("BUILD_NO", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "构建号");

    /**
     * The column <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA.EXTRA</code>. 额外预留字段
     */
    public final TableField<TQualityHisDetailMetadataRecord, String> EXTRA = createField("EXTRA", org.jooq.impl.SQLDataType.CLOB, this, "额外预留字段");

    /**
     * Create a <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA</code> table reference
     */
    public TQualityHisDetailMetadata() {
        this("T_QUALITY_HIS_DETAIL_METADATA", null);
    }

    /**
     * Create an aliased <code>devops_quality.T_QUALITY_HIS_DETAIL_METADATA</code> table reference
     */
    public TQualityHisDetailMetadata(String alias) {
        this(alias, T_QUALITY_HIS_DETAIL_METADATA);
    }

    private TQualityHisDetailMetadata(String alias, Table<TQualityHisDetailMetadataRecord> aliased) {
        this(alias, aliased, null);
    }

    private TQualityHisDetailMetadata(String alias, Table<TQualityHisDetailMetadataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "执行结果详细基础数据表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsQuality.DEVOPS_QUALITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TQualityHisDetailMetadataRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_QUALITY_HIS_DETAIL_METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TQualityHisDetailMetadataRecord> getPrimaryKey() {
        return Keys.KEY_T_QUALITY_HIS_DETAIL_METADATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TQualityHisDetailMetadataRecord>> getKeys() {
        return Arrays.<UniqueKey<TQualityHisDetailMetadataRecord>>asList(Keys.KEY_T_QUALITY_HIS_DETAIL_METADATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TQualityHisDetailMetadata as(String alias) {
        return new TQualityHisDetailMetadata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TQualityHisDetailMetadata rename(String name) {
        return new TQualityHisDetailMetadata(name, null);
    }
}
