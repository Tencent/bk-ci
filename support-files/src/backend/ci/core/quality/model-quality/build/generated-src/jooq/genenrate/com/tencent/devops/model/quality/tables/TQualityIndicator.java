/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.quality.tables;


import com.tencent.devops.model.quality.DevopsQuality;
import com.tencent.devops.model.quality.Keys;
import com.tencent.devops.model.quality.tables.records.TQualityIndicatorRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 质量红线指标表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TQualityIndicator extends TableImpl<TQualityIndicatorRecord> {

    private static final long serialVersionUID = 684358838;

    /**
     * The reference instance of <code>devops_quality.T_QUALITY_INDICATOR</code>
     */
    public static final TQualityIndicator T_QUALITY_INDICATOR = new TQualityIndicator();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TQualityIndicatorRecord> getRecordType() {
        return TQualityIndicatorRecord.class;
    }

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.ID</code>.
     */
    public final TableField<TQualityIndicatorRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.ELEMENT_TYPE</code>. 原子的ClassType
     */
    public final TableField<TQualityIndicatorRecord, String> ELEMENT_TYPE = createField("ELEMENT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "原子的ClassType");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.ELEMENT_NAME</code>. 产出原子
     */
    public final TableField<TQualityIndicatorRecord, String> ELEMENT_NAME = createField("ELEMENT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "产出原子");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.ELEMENT_DETAIL</code>. 工具/原子子类
     */
    public final TableField<TQualityIndicatorRecord, String> ELEMENT_DETAIL = createField("ELEMENT_DETAIL", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "工具/原子子类");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.EN_NAME</code>. 指标英文名
     */
    public final TableField<TQualityIndicatorRecord, String> EN_NAME = createField("EN_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "指标英文名");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.CN_NAME</code>. 指标中文名
     */
    public final TableField<TQualityIndicatorRecord, String> CN_NAME = createField("CN_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "指标中文名");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.METADATA_IDS</code>. 指标所包含基础数据
     */
    public final TableField<TQualityIndicatorRecord, String> METADATA_IDS = createField("METADATA_IDS", org.jooq.impl.SQLDataType.CLOB, this, "指标所包含基础数据");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.DEFAULT_OPERATION</code>. 默认操作
     */
    public final TableField<TQualityIndicatorRecord, String> DEFAULT_OPERATION = createField("DEFAULT_OPERATION", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "默认操作");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.OPERATION_AVAILABLE</code>. 可用操作
     */
    public final TableField<TQualityIndicatorRecord, String> OPERATION_AVAILABLE = createField("OPERATION_AVAILABLE", org.jooq.impl.SQLDataType.CLOB, this, "可用操作");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.THRESHOLD</code>. 默认阈值
     */
    public final TableField<TQualityIndicatorRecord, String> THRESHOLD = createField("THRESHOLD", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "默认阈值");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.THRESHOLD_TYPE</code>. 阈值类型
     */
    public final TableField<TQualityIndicatorRecord, String> THRESHOLD_TYPE = createField("THRESHOLD_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "阈值类型");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.DESC</code>. 描述
     */
    public final TableField<TQualityIndicatorRecord, String> DESC = createField("DESC", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "描述");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.INDICATOR_READ_ONLY</code>. 是否可修改
     */
    public final TableField<TQualityIndicatorRecord, Boolean> INDICATOR_READ_ONLY = createField("INDICATOR_READ_ONLY", org.jooq.impl.SQLDataType.BIT, this, "是否可修改");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.STAGE</code>. 阶段
     */
    public final TableField<TQualityIndicatorRecord, String> STAGE = createField("STAGE", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "阶段");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.INDICATOR_TEMPLATE_RANGE</code>. 可见模板范围
     */
    public final TableField<TQualityIndicatorRecord, String> INDICATOR_TEMPLATE_RANGE = createField("INDICATOR_TEMPLATE_RANGE", org.jooq.impl.SQLDataType.CLOB, this, "可见模板范围");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.INDICATOR_RANGE</code>. 可见项目范围
     */
    public final TableField<TQualityIndicatorRecord, String> INDICATOR_RANGE = createField("INDICATOR_RANGE", org.jooq.impl.SQLDataType.CLOB, this, "可见项目范围");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.ENABLE</code>. 是否启用
     */
    public final TableField<TQualityIndicatorRecord, Boolean> ENABLE = createField("ENABLE", org.jooq.impl.SQLDataType.BIT, this, "是否启用");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.TYPE</code>. 指标类型
     */
    public final TableField<TQualityIndicatorRecord, String> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(32).defaultValue(org.jooq.impl.DSL.inline("SYSTEM", org.jooq.impl.SQLDataType.VARCHAR)), this, "指标类型");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.TAG</code>. 指标标签，用于前端区分控制
     */
    public final TableField<TQualityIndicatorRecord, String> TAG = createField("TAG", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "指标标签，用于前端区分控制");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.CREATE_USER</code>. 创建用户
     */
    public final TableField<TQualityIndicatorRecord, String> CREATE_USER = createField("CREATE_USER", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "创建用户");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.UPDATE_USER</code>. 更新用户
     */
    public final TableField<TQualityIndicatorRecord, String> UPDATE_USER = createField("UPDATE_USER", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "更新用户");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.CREATE_TIME</code>. 创建时间
     */
    public final TableField<TQualityIndicatorRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "创建时间");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.UPDATE_TIME</code>. 更新时间
     */
    public final TableField<TQualityIndicatorRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "更新时间");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.ATOM_VERSION</code>. 插件版本号
     */
    public final TableField<TQualityIndicatorRecord, String> ATOM_VERSION = createField("ATOM_VERSION", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false).defaultValue(org.jooq.impl.DSL.inline("1.0.0", org.jooq.impl.SQLDataType.VARCHAR)), this, "插件版本号");

    /**
     * The column <code>devops_quality.T_QUALITY_INDICATOR.LOG_PROMPT</code>. 用户自定义提示日志
     */
    public final TableField<TQualityIndicatorRecord, String> LOG_PROMPT = createField("LOG_PROMPT", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户自定义提示日志");

    /**
     * Create a <code>devops_quality.T_QUALITY_INDICATOR</code> table reference
     */
    public TQualityIndicator() {
        this("T_QUALITY_INDICATOR", null);
    }

    /**
     * Create an aliased <code>devops_quality.T_QUALITY_INDICATOR</code> table reference
     */
    public TQualityIndicator(String alias) {
        this(alias, T_QUALITY_INDICATOR);
    }

    private TQualityIndicator(String alias, Table<TQualityIndicatorRecord> aliased) {
        this(alias, aliased, null);
    }

    private TQualityIndicator(String alias, Table<TQualityIndicatorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "质量红线指标表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsQuality.DEVOPS_QUALITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TQualityIndicatorRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_QUALITY_INDICATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TQualityIndicatorRecord> getPrimaryKey() {
        return Keys.KEY_T_QUALITY_INDICATOR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TQualityIndicatorRecord>> getKeys() {
        return Arrays.<UniqueKey<TQualityIndicatorRecord>>asList(Keys.KEY_T_QUALITY_INDICATOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TQualityIndicator as(String alias) {
        return new TQualityIndicator(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TQualityIndicator rename(String name) {
        return new TQualityIndicator(name, null);
    }
}
