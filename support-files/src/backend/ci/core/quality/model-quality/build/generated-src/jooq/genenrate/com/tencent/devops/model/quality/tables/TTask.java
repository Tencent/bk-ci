/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.quality.tables;


import com.tencent.devops.model.quality.DevopsQuality;
import com.tencent.devops.model.quality.Keys;
import com.tencent.devops.model.quality.tables.records.TTaskRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TTask extends TableImpl<TTaskRecord> {

    private static final long serialVersionUID = -918354056;

    /**
     * The reference instance of <code>devops_quality.T_TASK</code>
     */
    public static final TTask T_TASK = new TTask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TTaskRecord> getRecordType() {
        return TTaskRecord.class;
    }

    /**
     * The column <code>devops_quality.T_TASK.ID</code>.
     */
    public final TableField<TTaskRecord, String> ID = createField("ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_TASK.NAME</code>.
     */
    public final TableField<TTaskRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_TASK.CREATE_TIME</code>.
     */
    public final TableField<TTaskRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_quality.T_TASK.UPDATE_TIME</code>.
     */
    public final TableField<TTaskRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>devops_quality.T_TASK</code> table reference
     */
    public TTask() {
        this("T_TASK", null);
    }

    /**
     * Create an aliased <code>devops_quality.T_TASK</code> table reference
     */
    public TTask(String alias) {
        this(alias, T_TASK);
    }

    private TTask(String alias, Table<TTaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private TTask(String alias, Table<TTaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsQuality.DEVOPS_QUALITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TTaskRecord> getPrimaryKey() {
        return Keys.KEY_T_TASK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TTaskRecord>> getKeys() {
        return Arrays.<UniqueKey<TTaskRecord>>asList(Keys.KEY_T_TASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TTask as(String alias) {
        return new TTask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TTask rename(String name) {
        return new TTask(name, null);
    }
}
