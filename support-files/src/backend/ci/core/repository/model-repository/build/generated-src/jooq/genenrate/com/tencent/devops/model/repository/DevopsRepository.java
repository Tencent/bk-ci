/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.repository;


import com.tencent.devops.model.repository.tables.TRepository;
import com.tencent.devops.model.repository.tables.TRepositoryCodeGit;
import com.tencent.devops.model.repository.tables.TRepositoryCodeGitlab;
import com.tencent.devops.model.repository.tables.TRepositoryCodeP4;
import com.tencent.devops.model.repository.tables.TRepositoryCodeSvn;
import com.tencent.devops.model.repository.tables.TRepositoryCommit;
import com.tencent.devops.model.repository.tables.TRepositoryGithub;
import com.tencent.devops.model.repository.tables.TRepositoryGithubToken;
import com.tencent.devops.model.repository.tables.TRepositoryGithubWhitelist;
import com.tencent.devops.model.repository.tables.TRepositoryGtiToken;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DevopsRepository extends SchemaImpl {

    private static final long serialVersionUID = 172258752;

    /**
     * The reference instance of <code>devops_repository</code>
     */
    public static final DevopsRepository DEVOPS_REPOSITORY = new DevopsRepository();

    /**
     * The table <code>devops_repository.T_REPOSITORY</code>.
     */
    public final TRepository T_REPOSITORY = com.tencent.devops.model.repository.tables.TRepository.T_REPOSITORY;

    /**
     * The table <code>devops_repository.T_REPOSITORY_CODE_GIT</code>.
     */
    public final TRepositoryCodeGit T_REPOSITORY_CODE_GIT = com.tencent.devops.model.repository.tables.TRepositoryCodeGit.T_REPOSITORY_CODE_GIT;

    /**
     * The table <code>devops_repository.T_REPOSITORY_CODE_GITLAB</code>.
     */
    public final TRepositoryCodeGitlab T_REPOSITORY_CODE_GITLAB = com.tencent.devops.model.repository.tables.TRepositoryCodeGitlab.T_REPOSITORY_CODE_GITLAB;

    /**
     * The table <code>devops_repository.T_REPOSITORY_CODE_P4</code>.
     */
    public final TRepositoryCodeP4 T_REPOSITORY_CODE_P4 = com.tencent.devops.model.repository.tables.TRepositoryCodeP4.T_REPOSITORY_CODE_P4;

    /**
     * The table <code>devops_repository.T_REPOSITORY_CODE_SVN</code>.
     */
    public final TRepositoryCodeSvn T_REPOSITORY_CODE_SVN = com.tencent.devops.model.repository.tables.TRepositoryCodeSvn.T_REPOSITORY_CODE_SVN;

    /**
     * The table <code>devops_repository.T_REPOSITORY_COMMIT</code>.
     */
    public final TRepositoryCommit T_REPOSITORY_COMMIT = com.tencent.devops.model.repository.tables.TRepositoryCommit.T_REPOSITORY_COMMIT;

    /**
     * The table <code>devops_repository.T_REPOSITORY_GITHUB</code>.
     */
    public final TRepositoryGithub T_REPOSITORY_GITHUB = com.tencent.devops.model.repository.tables.TRepositoryGithub.T_REPOSITORY_GITHUB;

    /**
     * The table <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN</code>.
     */
    public final TRepositoryGithubToken T_REPOSITORY_GITHUB_TOKEN = com.tencent.devops.model.repository.tables.TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN;

    /**
     * The table <code>devops_repository.T_REPOSITORY_GITHUB_WHITELIST</code>.
     */
    public final TRepositoryGithubWhitelist T_REPOSITORY_GITHUB_WHITELIST = com.tencent.devops.model.repository.tables.TRepositoryGithubWhitelist.T_REPOSITORY_GITHUB_WHITELIST;

    /**
     * The table <code>devops_repository.T_REPOSITORY_GTI_TOKEN</code>.
     */
    public final TRepositoryGtiToken T_REPOSITORY_GTI_TOKEN = com.tencent.devops.model.repository.tables.TRepositoryGtiToken.T_REPOSITORY_GTI_TOKEN;

    /**
     * No further instances allowed
     */
    private DevopsRepository() {
        super("devops_repository", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            TRepository.T_REPOSITORY,
            TRepositoryCodeGit.T_REPOSITORY_CODE_GIT,
            TRepositoryCodeGitlab.T_REPOSITORY_CODE_GITLAB,
            TRepositoryCodeP4.T_REPOSITORY_CODE_P4,
            TRepositoryCodeSvn.T_REPOSITORY_CODE_SVN,
            TRepositoryCommit.T_REPOSITORY_COMMIT,
            TRepositoryGithub.T_REPOSITORY_GITHUB,
            TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN,
            TRepositoryGithubWhitelist.T_REPOSITORY_GITHUB_WHITELIST,
            TRepositoryGtiToken.T_REPOSITORY_GTI_TOKEN);
    }
}
