/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.repository.tables;


import com.tencent.devops.model.repository.DevopsRepository;
import com.tencent.devops.model.repository.Keys;
import com.tencent.devops.model.repository.tables.records.TRepositoryCodeP4Record;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRepositoryCodeP4 extends TableImpl<TRepositoryCodeP4Record> {

    private static final long serialVersionUID = 2064108057;

    /**
     * The reference instance of <code>devops_repository.T_REPOSITORY_CODE_P4</code>
     */
    public static final TRepositoryCodeP4 T_REPOSITORY_CODE_P4 = new TRepositoryCodeP4();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRepositoryCodeP4Record> getRecordType() {
        return TRepositoryCodeP4Record.class;
    }

    /**
     * The column <code>devops_repository.T_REPOSITORY_CODE_P4.REPOSITORY_ID</code>.
     */
    public final TableField<TRepositoryCodeP4Record, Long> REPOSITORY_ID = createField("REPOSITORY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>devops_repository.T_REPOSITORY_CODE_P4.PROJECT_NAME</code>.
     */
    public final TableField<TRepositoryCodeP4Record, String> PROJECT_NAME = createField("PROJECT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>devops_repository.T_REPOSITORY_CODE_P4.USER_NAME</code>.
     */
    public final TableField<TRepositoryCodeP4Record, String> USER_NAME = createField("USER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_repository.T_REPOSITORY_CODE_P4.CREATED_TIME</code>.
     */
    public final TableField<TRepositoryCodeP4Record, LocalDateTime> CREATED_TIME = createField("CREATED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>devops_repository.T_REPOSITORY_CODE_P4.UPDATED_TIME</code>.
     */
    public final TableField<TRepositoryCodeP4Record, LocalDateTime> UPDATED_TIME = createField("UPDATED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>devops_repository.T_REPOSITORY_CODE_P4.CREDENTIAL_ID</code>.
     */
    public final TableField<TRepositoryCodeP4Record, String> CREDENTIAL_ID = createField("CREDENTIAL_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * Create a <code>devops_repository.T_REPOSITORY_CODE_P4</code> table reference
     */
    public TRepositoryCodeP4() {
        this("T_REPOSITORY_CODE_P4", null);
    }

    /**
     * Create an aliased <code>devops_repository.T_REPOSITORY_CODE_P4</code> table reference
     */
    public TRepositoryCodeP4(String alias) {
        this(alias, T_REPOSITORY_CODE_P4);
    }

    private TRepositoryCodeP4(String alias, Table<TRepositoryCodeP4Record> aliased) {
        this(alias, aliased, null);
    }

    private TRepositoryCodeP4(String alias, Table<TRepositoryCodeP4Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsRepository.DEVOPS_REPOSITORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRepositoryCodeP4Record> getPrimaryKey() {
        return Keys.KEY_T_REPOSITORY_CODE_P4_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRepositoryCodeP4Record>> getKeys() {
        return Arrays.<UniqueKey<TRepositoryCodeP4Record>>asList(Keys.KEY_T_REPOSITORY_CODE_P4_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryCodeP4 as(String alias) {
        return new TRepositoryCodeP4(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRepositoryCodeP4 rename(String name) {
        return new TRepositoryCodeP4(name, null);
    }
}
