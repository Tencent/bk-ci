/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.repository.tables.records;


import com.tencent.devops.model.repository.tables.TRepositoryGithub;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRepositoryGithubRecord extends UpdatableRecordImpl<TRepositoryGithubRecord> implements Record5<Long, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1847323816;

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB.REPOSITORY_ID</code>.
     */
    public TRepositoryGithubRecord setRepositoryId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB.REPOSITORY_ID</code>.
     */
    public Long getRepositoryId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB.PROJECT_NAME</code>.
     */
    public TRepositoryGithubRecord setProjectName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB.PROJECT_NAME</code>.
     */
    public String getProjectName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB.USER_NAME</code>.
     */
    public TRepositoryGithubRecord setUserName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB.USER_NAME</code>.
     */
    public String getUserName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB.CREATED_TIME</code>.
     */
    public TRepositoryGithubRecord setCreatedTime(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB.CREATED_TIME</code>.
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB.UPDATED_TIME</code>.
     */
    public TRepositoryGithubRecord setUpdatedTime(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB.UPDATED_TIME</code>.
     */
    public LocalDateTime getUpdatedTime() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TRepositoryGithub.T_REPOSITORY_GITHUB.REPOSITORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TRepositoryGithub.T_REPOSITORY_GITHUB.PROJECT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TRepositoryGithub.T_REPOSITORY_GITHUB.USER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return TRepositoryGithub.T_REPOSITORY_GITHUB.CREATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return TRepositoryGithub.T_REPOSITORY_GITHUB.UPDATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getRepositoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getProjectName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getCreatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getUpdatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubRecord value1(Long value) {
        setRepositoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubRecord value2(String value) {
        setProjectName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubRecord value3(String value) {
        setUserName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubRecord value4(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubRecord value5(LocalDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubRecord values(Long value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TRepositoryGithubRecord
     */
    public TRepositoryGithubRecord() {
        super(TRepositoryGithub.T_REPOSITORY_GITHUB);
    }

    /**
     * Create a detached, initialised TRepositoryGithubRecord
     */
    public TRepositoryGithubRecord(Long repositoryId, String projectName, String userName, LocalDateTime createdTime, LocalDateTime updatedTime) {
        super(TRepositoryGithub.T_REPOSITORY_GITHUB);

        set(0, repositoryId);
        set(1, projectName);
        set(2, userName);
        set(3, createdTime);
        set(4, updatedTime);
    }
}
