/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.repository.tables.records;


import com.tencent.devops.model.repository.tables.TRepositoryGithubToken;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRepositoryGithubTokenRecord extends UpdatableRecordImpl<TRepositoryGithubTokenRecord> implements Record7<Long, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -920199644;

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.ID</code>.
     */
    public TRepositoryGithubTokenRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.USER_ID</code>.
     */
    public TRepositoryGithubTokenRecord setUserId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.USER_ID</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.ACCESS_TOKEN</code>.
     */
    public TRepositoryGithubTokenRecord setAccessToken(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.ACCESS_TOKEN</code>.
     */
    public String getAccessToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.TOKEN_TYPE</code>.
     */
    public TRepositoryGithubTokenRecord setTokenType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.TOKEN_TYPE</code>.
     */
    public String getTokenType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.SCOPE</code>.
     */
    public TRepositoryGithubTokenRecord setScope(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.SCOPE</code>.
     */
    public String getScope() {
        return (String) get(4);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.CREATE_TIME</code>.
     */
    public TRepositoryGithubTokenRecord setCreateTime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.CREATE_TIME</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.UPDATE_TIME</code>.
     */
    public TRepositoryGithubTokenRecord setUpdateTime(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY_GITHUB_TOKEN.UPDATE_TIME</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN.ACCESS_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN.TOKEN_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN.SCOPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field6() {
        return TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field7() {
        return TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAccessToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTokenType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getScope();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value7() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubTokenRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubTokenRecord value2(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubTokenRecord value3(String value) {
        setAccessToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubTokenRecord value4(String value) {
        setTokenType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubTokenRecord value5(String value) {
        setScope(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubTokenRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubTokenRecord value7(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryGithubTokenRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TRepositoryGithubTokenRecord
     */
    public TRepositoryGithubTokenRecord() {
        super(TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN);
    }

    /**
     * Create a detached, initialised TRepositoryGithubTokenRecord
     */
    public TRepositoryGithubTokenRecord(Long id, String userId, String accessToken, String tokenType, String scope, LocalDateTime createTime, LocalDateTime updateTime) {
        super(TRepositoryGithubToken.T_REPOSITORY_GITHUB_TOKEN);

        set(0, id);
        set(1, userId);
        set(2, accessToken);
        set(3, tokenType);
        set(4, scope);
        set(5, createTime);
        set(6, updateTime);
    }
}
