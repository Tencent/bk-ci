/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.repository.tables.records;


import com.tencent.devops.model.repository.tables.TRepository;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRepositoryRecord extends UpdatableRecordImpl<TRepositoryRecord> implements Record9<Long, String, String, String, String, String, LocalDateTime, LocalDateTime, Boolean> {

    private static final long serialVersionUID = 1846563115;

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.REPOSITORY_ID</code>.
     */
    public TRepositoryRecord setRepositoryId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.REPOSITORY_ID</code>.
     */
    public Long getRepositoryId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.PROJECT_ID</code>.
     */
    public TRepositoryRecord setProjectId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.PROJECT_ID</code>.
     */
    public String getProjectId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.USER_ID</code>.
     */
    public TRepositoryRecord setUserId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.USER_ID</code>.
     */
    public String getUserId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.ALIAS_NAME</code>.
     */
    public TRepositoryRecord setAliasName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.ALIAS_NAME</code>.
     */
    public String getAliasName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.URL</code>.
     */
    public TRepositoryRecord setUrl(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.URL</code>.
     */
    public String getUrl() {
        return (String) get(4);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.TYPE</code>.
     */
    public TRepositoryRecord setType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.TYPE</code>.
     */
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.CREATED_TIME</code>.
     */
    public TRepositoryRecord setCreatedTime(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.CREATED_TIME</code>.
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.UPDATED_TIME</code>.
     */
    public TRepositoryRecord setUpdatedTime(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.UPDATED_TIME</code>.
     */
    public LocalDateTime getUpdatedTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>devops_repository.T_REPOSITORY.IS_DELETED</code>.
     */
    public TRepositoryRecord setIsDeleted(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>devops_repository.T_REPOSITORY.IS_DELETED</code>.
     */
    public Boolean getIsDeleted() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, String, String, String, String, String, LocalDateTime, LocalDateTime, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, String, String, String, String, String, LocalDateTime, LocalDateTime, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TRepository.T_REPOSITORY.REPOSITORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TRepository.T_REPOSITORY.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TRepository.T_REPOSITORY.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TRepository.T_REPOSITORY.ALIAS_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TRepository.T_REPOSITORY.URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return TRepository.T_REPOSITORY.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field7() {
        return TRepository.T_REPOSITORY.CREATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field8() {
        return TRepository.T_REPOSITORY.UPDATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return TRepository.T_REPOSITORY.IS_DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getRepositoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAliasName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value7() {
        return getCreatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value8() {
        return getUpdatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value1(Long value) {
        setRepositoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value2(String value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value3(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value4(String value) {
        setAliasName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value5(String value) {
        setUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value6(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value7(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value8(LocalDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord value9(Boolean value) {
        setIsDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRepositoryRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TRepositoryRecord
     */
    public TRepositoryRecord() {
        super(TRepository.T_REPOSITORY);
    }

    /**
     * Create a detached, initialised TRepositoryRecord
     */
    public TRepositoryRecord(Long repositoryId, String projectId, String userId, String aliasName, String url, String type, LocalDateTime createdTime, LocalDateTime updatedTime, Boolean isDeleted) {
        super(TRepository.T_REPOSITORY);

        set(0, repositoryId);
        set(1, projectId);
        set(2, userId);
        set(3, aliasName);
        set(4, url);
        set(5, type);
        set(6, createdTime);
        set(7, updatedTime);
        set(8, isDeleted);
    }
}
