/*
 * This file is generated by jOOQ.
*/
package com.tencent.devops.model.ticket.tables;


import com.tencent.devops.model.ticket.DevopsTicket;
import com.tencent.devops.model.ticket.Keys;
import com.tencent.devops.model.ticket.tables.records.TCredentialRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCredential extends TableImpl<TCredentialRecord> {

    private static final long serialVersionUID = 82630209;

    /**
     * The reference instance of <code>devops_ticket.T_CREDENTIAL</code>
     */
    public static final TCredential T_CREDENTIAL = new TCredential();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCredentialRecord> getRecordType() {
        return TCredentialRecord.class;
    }

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.PROJECT_ID</code>.
     */
    public final TableField<TCredentialRecord, String> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREDENTIAL_ID</code>.
     */
    public final TableField<TCredentialRecord, String> CREDENTIAL_ID = createField("CREDENTIAL_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREDENTIAL_USER_ID</code>.
     */
    public final TableField<TCredentialRecord, String> CREDENTIAL_USER_ID = createField("CREDENTIAL_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREDENTIAL_TYPE</code>.
     */
    public final TableField<TCredentialRecord, String> CREDENTIAL_TYPE = createField("CREDENTIAL_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREDENTIAL_REMARK</code>.
     */
    public final TableField<TCredentialRecord, String> CREDENTIAL_REMARK = createField("CREDENTIAL_REMARK", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREDENTIAL_V1</code>.
     */
    public final TableField<TCredentialRecord, String> CREDENTIAL_V1 = createField("CREDENTIAL_V1", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREDENTIAL_V2</code>.
     */
    public final TableField<TCredentialRecord, String> CREDENTIAL_V2 = createField("CREDENTIAL_V2", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREDENTIAL_V3</code>.
     */
    public final TableField<TCredentialRecord, String> CREDENTIAL_V3 = createField("CREDENTIAL_V3", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREDENTIAL_V4</code>.
     */
    public final TableField<TCredentialRecord, String> CREDENTIAL_V4 = createField("CREDENTIAL_V4", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.CREATED_TIME</code>.
     */
    public final TableField<TCredentialRecord, LocalDateTime> CREATED_TIME = createField("CREATED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>devops_ticket.T_CREDENTIAL.UPDATED_TIME</code>.
     */
    public final TableField<TCredentialRecord, LocalDateTime> UPDATED_TIME = createField("UPDATED_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>devops_ticket.T_CREDENTIAL</code> table reference
     */
    public TCredential() {
        this("T_CREDENTIAL", null);
    }

    /**
     * Create an aliased <code>devops_ticket.T_CREDENTIAL</code> table reference
     */
    public TCredential(String alias) {
        this(alias, T_CREDENTIAL);
    }

    private TCredential(String alias, Table<TCredentialRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCredential(String alias, Table<TCredentialRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevopsTicket.DEVOPS_TICKET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCredentialRecord> getPrimaryKey() {
        return Keys.KEY_T_CREDENTIAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCredentialRecord>> getKeys() {
        return Arrays.<UniqueKey<TCredentialRecord>>asList(Keys.KEY_T_CREDENTIAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCredential as(String alias) {
        return new TCredential(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCredential rename(String name) {
        return new TCredential(name, null);
    }
}
